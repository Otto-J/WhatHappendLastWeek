{
  "startOfWeek": "2025-08-04",
  "weekNumber": 32,
  "availableItems": 10,
  "results": [
    {
      "feedTitle": "Whiskey Web and Whatnot: Web Development, Neat",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "Error 500: Our Lives",
          "media": "https://m.pfxes.com/vj4uqd6U/rss.art19.com/episodes/849e845d-aaa1-4349-9ee5-35623ba1c416.mp3?rss_browser=BAhJIg9yc3MtcGFyc2VyBjoGRVQ%3D--42d668516e215326a0c0e36404173d504b339a70",
          "showNotes": "This week, Robbie and Chuck talk about whiskey on Mondays, parenting chaos, and Chuck’s hot-water disaster. They dive into open-source dependency drama, including the Stylus package getting flagged as malicious, and the TEA app’s massive data leak. They question the stability of NPM, the illusion of software licensing security, and the ethics of data deletion. They also explore how AI is transforming development workflows—sometimes usefully, sometimes hilariously wrong.\nIn this episode:\n\n(00:00) - Intro\n(01:07) - Whiskey review & rating: Catoctin Creek Roundstone Rye Whiskey\n(08:15) - Robbie’s domestic chaos & Chuck’s plumbing nightmare\n(13:55) - The Stylus debacle and the fragility of NPM\n(19:05) - Insurance headaches, contractor woes, and house stress\n(25:16) - Mac Minis, podcast metrics, and behind-the-scenes\n(29:09) - Europe drinks better than we do\n(30:37) - Tea's data breach\n(35:33) - Using AI for real-world dev problems (and plumbing fixes)\n(43:01) - Your data is never really deleted\n(46:23) - Why podcast metrics are kind of a scam\n(47:44) - Big Sky Dev Con live episode\n(49:28) - Chuck’s moving to Italy\n(50:09) - Jedi Survivor, Destiny 2, and gaming on the road\n(55:37) - Plugs\n\nLinks\n\nCatoctin Creek Roundstone Rye Whiskey: https://catoctincreekdistilling.com/roundstone\nRittenhouse: http://heavenhilldistillery.com/rittenhouse-rye.php\nCopper Fox Distillery: https://www.copperfoxdistillery.com\nDax: https://x.com/thdxr/\nAWS: https://aws.amazon.com/\nHashiCorp: https://www.hashicorp.com/\nIBM: https://www.ibm.com/\nSagamore Spirit: https://sagamorespirit.com/\nStylus: https://www.npmjs.com/package/stylus\nnpm 'accidentally' removes Stylus package, breaks builds and pipelines: https://www.bleepingcomputer.com/news/security/npm-accidentally-removes-stylus-package-breaks-builds-and-pipelines/\nTea: https://www.teaforwomen.com/\nTea encouraged its users to spill. Then the app's data got leaked: https://www.npr.org/2025/08/02/nx-s1-5483886/tea-app-breach-hacked-whisper-networks\nNPM: https://www.npmjs.com/\nMicrosoft: https://www.microsoft.com/\nCSS: https://www.w3.org/Style/CSS/\nJavaScript: https://developer.mozilla.org/en-US/docs/Web/JavaScript\nnpm left-pad incident: https://en.wikipedia.org/wiki/Npm_left-pad_incident\nFakerJS: https://fakerjs.dev/\nDavid Cramer: https://x.com/zeeg\nMIT: https://www.mit.edu\nGranted insurance: https://www.grantinsurance.com/\n7-Eleven: https://www.7-eleven.com/\nAccenture: https://www.accenture.com/\nOpera Mini: https://www.opera.com/mini\nDHH: https://x.com/dhh/\nLex Fridman Podcast: https://lexfridman.com/podcast/\nMac Mini: https://www.apple.com/mac-mini/\nEmber: https://emberjs.com/\nBig Sky Dev Con: https://bigskydevcon.com/\nHTMX: https://htmx.org/\nAdam Argyle: https://x.com/argyleink/\nTypecraft: https://typecraft.dev/\niPhone: https://www.apple.com/iphone/\nFirebase: https://firebase.google.com/\nSQL: https://www.mysql.com/\nSupabase: https://supabase.com/\nPostgres: https://www.postgresql.org/\nAmazon: https://www.amazon.com/\nClaude: https://claude.ai/\nWindsurf: https://windsurf.ai/\nTypeScript: https://www.typescriptlang.org/\nVercel: https://vercel.com/\nShepherd: https://www.shepherdjs.dev/\nCypress: https://www.cypress.io/\nPlaywright: https://playwright.dev/\nReact: https://react.dev/\nART19: https://art19.com/\nMalort: https://malort.com/\nPrimeagen: https://x.com/ThePrimeagen\nKen Wheeler: https://x.com/ken_wheeler/\nJedi Survivor: https://www.ea.com/games/starwars/jedi-survivor\nJedi: Fallen Order: https://www.ea.com/games/starwars/jedi-fallen-order\nSwitch 2: https://www.nintendo.com/us/gaming-systems/switch-2/\nDestiny 2: https://www.bungie.net/7/en/destiny\nIndiana Jones and the Great Circle: https://indianajones.bethesda.net/en-US\nTears of the Kingdom: https://zelda.nintendo.com/tears-of-the-kingdom/\nFIFA: https://www.fifa.com/\nBreath of the Wild: https://en.wikipedia.org/wiki/The_Legend_of_Zelda:_Breath_of_the_Wild\nMario Kart World: https://www.nintendo.com/us/store/products/mario-kart-world-switch-2/?srsltid=AfmBOopTg6wc7TCfLihURMUgYx554jK-li2JTJ33ocBEGS9nEEcnO_Ev\nDonkey Kong: https://en.wikipedia.org/wiki/Donkey_Kong\nOcarina of Time: https://www.zeldadungeon.net/wiki/The_Legend_of_Zelda:_Ocarina_of_Time\nAnagram: https://danabra.mov/\nGeorge Clooney: https://en.wikipedia.org/wiki/George_Clooney\nElon Musk: https://en.wikipedia.org/wiki/Elon_Musk\n\nConnect with Chuck and Robbie\n\nRobbie Wagner: https://x.com/RobbieTheWagner\nChuck Carpenter: https://x.com/CharlesWthe3rd\n\nSubscribe and stay in touch\n\nWebsite: https://whiskey.fm\nApple Podcasts: https://podcasts.apple.com/us/podcast/whiskey-web-and-whatnot/id1552776603\nSpotify: https://open.spotify.com/show/19jiuHAqzeKnkleQUpZxDf\nOvercast: https://overcast.fm/itunes1552776603\nYouTube: https://www.youtube.com/@WhiskeyWebAndWhatnot\n\nWhiskey Web and Whatnot Merch\nEnjoying the podcast and want us to make more? Help support us by picking up some of our fresh merch at https://whiskey.fund.\nSee Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.",
          "itemLink": "https://art19.com/shows/whiskey-web-and-whatnot"
        }
      ]
    },
    {
      "feedTitle": "This Dot Labs RSS feed",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "Quo v[AI]dis, Tech Stack?",
          "media": null,
          "showNotes": "Since we've started extensively leveraging AI at This Dot to enhance development workflows and experimenting with different ways to make it as helpful as possible, there's been a creeping thought on my mind - Is AI just helping us write code faster, or is it silently reshaping what code we choose to write?\nEventually, this thought led to an interesting conversation on our company's Slack about the impact of AI on our tech stack choices. Some of the views shared there included:\n\"The battle between static and dynamic types is over. TypeScript won.\"\n\"The fast-paced development of new frameworks and the excitement around new shiny technologies is slowing down. AI can make existing things work with a workaround in a few minutes, so why create or adopt something new?\"\n\"AI models are more trained on the most popular stacks, so they will naturally favor those, leading to a self-reinforcing loop.\"\n\"A lot of AI coding assistants serve as marketing funnels for specific stacks, such as v0 being tailored to Next.js and Vercel or Lovable using Supabase and Clerk.\"\nAll of these points are valid and interesting, but they also made me think about the bigger picture. So I decided to do some extensive research (read \"I decided to make the OpenAI Deep Research tool do it for me\") and summarize my findings in this article.\nSo without further ado, here are some structured thoughts on how AI is reshaping our tech stack choices, and what it means for the future of software development.\n1. LLMs as the New Developer Platform\nIf software development is a journey, LLMs have become the new high-speed train line. Long gone are the days when we used Copilot as a fancy autocomplete tool. Don't get me wrong, it was mind-bogglingly good when it first came out, and I've used it extensively. But now, a few years later, LLMs have evolved into something much more powerful. With the rise of tools like Cursor, Windsurf, Roo Code, or Claude Code, LLMs are essentially becoming the new developer platform. They are no longer just a helper that autocompletes a switch statement or a function signature, but a full-fledged platform that can generate entire applications, write tests, and even refactor code.\nAnd it is not just a few evangelists or early adopters who are using these tools. They have become mainstream, with millions of developers relying on them daily. According to Deloitte, nearly 20% of devs in tech firms were already using generative AI coding tools by 2024, with 76% of StackOverflow respondents using or planning to use AI tools in their development process, according to the 2024 StackOverflow Developer Survey.\nThey've become an integral part of the development workflow, mediating how code is written, reviewed, and learned. I've argued in the past that LLMs are becoming a new layer of abstraction in software development, but now I believe they are evolving into something even more powerful - a new developer platform that is shaping how we think about and approach software development.\n2. The Reinforcement Loop: Popular Stacks Get Smarter\nAs we travel this AI-guided road, we find that certain routes become highways, while others lead to narrow paths or even dead ends. AI tools are not just helping us write code faster; they are also shaping our preferences for certain tech stacks. The most popular frameworks and languages, such as React.js on the frontend and Node.js on the backend (both with ~40% adoption), are the ones that AI tools perform best with. Their increasing popularity is not just a coincidence; it's a result of a self-reinforcing loop.\nAI models are trained on vast amounts of code, and the most popular stacks naturally have more data available for training, given their widespread use, leading to more questions, answers, and examples in the training data. This means that AI tools are inherently better at understanding and generating code for these stacks.\nAs an anecdotal example, I've noticed that AI tools tend to suggest React.js even when I specify a preference for another framework. As someone working with multiple tech stacks, I can attest that AI tools are significantly more effective with React.js or Node.js than, say, Yii2 or CakePHP.\nThis phenomenon is not limited to just one or two stacks; it applies to the entire ecosystem. The more a stack is used, the more data there is for AI to learn from, and the better it gets at generating code for that stack, resulting in a feedback loop:\nAI performs better on popular stacks.\nPopular stacks get more adoption as developers find them easier to work with.\nMore developers using those stacks means more data for AI to learn from.\nThe cycle continues, reinforcing the popularity of those stacks.\nThe issue is maybe even more evident with CSS frameworks. TailwindCSS, for example, has gained immense popularity thanks to its utility-first approach, which aligns well with AI's ability to generate and manipulate styles. As more developers adopt TailwindCSS, AI tools become better at understanding its conventions and generating appropriate styles, further driving its adoption.\nHowever, the Tailwind CSS example also highlights a potential pitfall of this reinforcement loop. Tailwind CSS v4 was released in January 2025. From my experience, AI tools still attempt to generate code using v3 concepts and often need to be reminded to use Tailwind CSS v4, requiring spoon-feeding with documentation to get it right. Effectively, this phenomenon can lead to a situation where AI tools not only reinforce the popularity of certain stacks but also potentially slow down the adoption of newer versions or alternatives.\n3. Frontend Acceleration: React, Angular, and Beyond\nNavigating the frontend landscape has always been tricky, but with AI, some paths feel like smooth expressways while others remain bumpy dirt roads. AI is particularly transformative in frontend development, where the complexity and boilerplate code can be overwhelming. Established frameworks like React and Angular, which are already popular, are seeing even more adoption due to AI's ability to generate components, tests, and optimizations.\nReact's widespread adoption and its status as the most popular framework on the frontend make it the go-to choice for many developers, especially with AI tools that can quickly scaffold new components or entire applications.\nHowever, Angular's strict structure and type safety also make it a strong contender. Angular's opinionated nature can actually benefit AI-generated code, as it provides a clear framework for the AI to follow, reducing ambiguity and potential bugs.\nCall me crazy but I think that long term Angular is going to work better with AI tools for frontend work.\nMore strict rules to follow, easier to build and scale. Just like for humans.\nWe just need to keep Angular opinionated enough.\n— Daniel Glejzner on X\nBut it's not just about how the frameworks are structured; it's also the documentation they provide. It has recently become the norm for frameworks to have AI-friendly documentation. Angular, for instance, has a llms.txt file that you can reference in your AI prompts to get more relevant results. The best example, however, in my opinion, is the Nuxt.ui documentation, which provides the option to copy each documentation page as markdown or a link to its markdown version, making it easy to reference in AI prompts.\nFrameworks that incorporate AI-friendly documentation and tooling are likely to experience increased adoption, as they facilitate developers' ability to leverage AI's capabilities.\n4. Full-Stack TS/JS: The Sweet Spot\nOn this AI-accelerated journey, some stacks have emerged as the smoothest rides, and full-stack JavaScript/TypeScript is leading the way. The combination of React on the frontend and Node.js on the backend provides a unified language ecosystem, making the road less bumpy for developers. Shared types, common tooling, and mature libraries enable faster prototyping and reduced context switching.\nAI seems to enjoy these well-paved highways too. I've observed numerous instances where AI tools default to suggesting Next.js and Tailwind CSS for new projects, even when users are prompted otherwise. While you can force a slight detour to something like Nuxt or SvelteKit, the road suddenly gets patchier - AI becomes less confident, requires more hand-holding, and sometimes outright stalls. So while still technically being in the sweet spot of full-stack JavaScript/TypeScript, deviating from the \"main highway\" even slightly can lead to a much rougher ride.\nReact-based full-stack frameworks are becoming mainstream, not necessarily because they are always the best solution, but because they are the path of least resistance for both humans and AI.\n5. The Polyglot Shift: AI Enables Multilingual Devs\nOne fascinating development on this journey is how AI is enabling more developers to become polyglots. Where switching stacks used to feel like taking detours into unknown territory, AI now acts like an on-demand guide. Whether it’s switching from Laravel to Spring Boot or from Angular to Svelte, AI helps bridge those knowledge gaps quickly.\nAt This Dot, we've always taken pride in our polyglot approach, but AI is lowering the barriers for everyone. Yes, we've done this before the rise of AI tooling. If you are an experienced engineer with a strong understanding of programming concepts, you'll be able to adapt to different stacks and projects quickly. But AI is now enabling even junior developers to become polyglots, and it's making it even easier for the experienced ones to switch between stacks seamlessly. AI doesn’t just shorten the journey - it makes more destinations accessible.\nThis \"AI boost\" not only facilitates the job of a software consultant, such as myself, who often has to switch between different projects, but it also opens the door to unlimited possibilities for companies to mix and match stacks based on their needs - particularly useful for companies that have diverse tech stacks, as it allows them to leverage the strengths of different languages and frameworks without the steep learning curve that usually comes with it.\n6. AI-Generated Stack Bundles: The Trojan Horse\nTrend I'm seeing: AI app generators are a sales funnel.\n-Chef uses Convex.\n-V0 is optimized for Vercel.\n-Lovable uses Supabase and Clerk.\n-Firebase Studio uses Google services.\nThese tools act like a trojan horse - they \"sell\" a tech stack.\nChoose wisely.\n— Cory House on X\nSome roads come pre-built, but with toll booths you may not notice until you're halfway through the trip. AI-generated apps from tools like v0, Firebase Studio, or Lovable are convenience highways - fast, smooth, and easy to follow - but they quietly nudge you toward specific tech stacks, backend services, databases, and deployment platforms.\nIt's a smart business model. These tools don't just scaffold your app; they bundle in opinions on hosting, auth providers, and DB layers. The convenience is undeniable, but there's a trade-off in flexibility and long-term maintainability. Engineering leaders must stay alert, like seasoned navigators, ensuring that the allure of speed doesn't lead their teams down the alleyways of vendor lock-in.\n7. From 'Buy vs Build' to 'Prompt vs Buy'\nThe classic dilemma used to be “buy vs build” - now it’s becoming “prompt vs buy.” Why pay for a bloated tour bus of a SaaS product, packed with destinations and detours you’ll never take (and priced accordingly), when you can chart a custom route with a few well-crafted prompts and have a lightweight internal tool up and running in days—or even hours?\nDo you need a simple tool to track customer contacts with a few custom fields and a clean interface? In the past, you might have booked a seat on the nearest SaaS solution - one that gets you close enough to your destination but comes with unnecessary stops and baggage. With AI, you can now skip the crowded bus altogether and build a tailor-made vehicle that drives exactly where you need to go, no more, no less.\nAI reshapes the travel map of product development. The road to MVPs has become faster, cheaper, and more direct. This shift is already rerouting the internal tooling landscape, steering companies away from bulky, one-size-fits-all platforms toward lean, AI-assembled solutions. And over time, it may change not just how we build, but where we build - with the smoothest highways forming around AI-friendly, modular ecosystems like Node, React, and TypeScript, while older “corporate” expressways like .NET, Java, or even Angular risk becoming the slow scenic routes of enterprise tech.\n8. Strategic Implications: Velocity vs Maintainability\nEvery shortcut comes with trade-offs. The fast lane that AI offers boosts productivity but can sometimes encourage shortcuts in architecture and design. Speeding to your destination is great - until you hit the maintenance toll booth further down the road.\nAI tooling makes it easier to throw together an MVP, but without experienced oversight, the resulting codebases can turn into spaghetti highways. Teams need to implement AI-era best practices: structured code reviews, prompt hygiene, and deliberate stack choices that prioritize long-term maintainability over short-term convenience.\nFailing to do so can lead to a \"quick and dirty\" mentality, where the focus is on getting things done fast rather than building robust, maintainable solutions, which is particularly concerning for companies that rely on in-house developers or junior teams who may not have the experience to recognize potential pitfalls in AI-generated code.\n9. Closing Reflection: Are We Still Choosing Our Stacks?\nSo, where are we heading?\nLooking at the current \"traffic\" on the modern software development pathways, one thing becomes clear: AI isn't just a productivity tool - the roads themselves are starting to shape the journey. What was once a deliberate process of choosing the right vehicle for the right terrain - picking our stacks based on product goals, team expertise, and long-term maintainability - now feels more like following GPS directions that constantly recalculate to the path of least resistance.\nAI is repaving the main routes, widening the lanes for certain tech stacks, and putting up \"scenic route\" signs for some frameworks while leaving others on neglected backroads. This doesn't mean we've lost control of the steering wheel, but it does mean that the map is changing beneath us in ways that are easy to overlook.\nThe risk is clear: we may find ourselves taking the smoothest on-ramps without ever asking if they lead to where we actually want to go. Convenience can quietly take priority over appropriateness. Productivity gains in the short term can pave over technical debt potholes that become unavoidable down the road.\nBut the story isn't entirely one of caution. There's a powerful opportunity here too. With AI as a co-pilot, we can explore more destinations than ever before - venturing into unfamiliar tech stacks, accelerating MVP development, or rapidly prototyping ideas that previously seemed out of reach. The key is to remain intentional about when to cruise with AI autopilot and when to take the wheel with both hands and steer purposefully.\nIn this new era of AI-shaped development, the question every engineering team should be asking is not just \"how fast can we go?\" but \"are we on the right road?\" and \"who's really choosing our route?\"\nAnd let’s not forget — some of these roads are still being built. Open-source maintainers and framework authors play a pivotal role in shaping which paths become highways. By designing AI-friendly architectures, providing structured, machine-readable documentation, and baking in patterns that are easy for AI models to learn and suggest, they can guide where AI directs traffic. Frameworks that proactively optimize for AI tooling aren’t just improving developer experience — they’re shaping the very flow of adoption in this AI-accelerated landscape.\nIf we're not mindful, we risk becoming passengers on a journey defined by default choices. However, if we remain vigilant, we can utilize AI to create more accurate maps, not just follow the fastest roads, but also chart new ones. Because while the routes may be getting redrawn, the destination should always be ours to choose.\nIn the end, the real competitive advantage will belong to those who can harness AI's speed while keeping their hands firmly on the wheel - navigating not by ease, but by purpose. In this new era, the most valuable skill may not be prompt engineering - it might be strategic discernment.",
          "itemLink": "https://www.thisdot.co/blog/quo-v-ai-dis-tech-stack"
        }
      ]
    },
    {
      "feedTitle": "ShopTalk",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "676: The $200 Upgrade, CSS Module Scripts, and Social Media Ethos",
          "media": "https://shoptalkshow.com/podcast-download/8322/676.mp3?nocache",
          "showNotes": "Show Description\nIt's time for a ShopTalk GearTalk segment on video and audio upgrades, a chat about better YouTube thumbnails, buying the $200 Yamaha guitar (or equivalent in other areas of life), Chris and Dave riff on CSS modules, and what's your social media ethos in 2025?\nListen on Website →\nLinks\n\nhow to make a killer thumbnail (for the 2025 algorithm) - YouTube\nFacecam 4K | Elgato\nBefore I go: Always buy the $200 Yamaha - daverupert.com\nThe $200 Yamaha – Chris Coyier\n668: Jake Archibald on Native HTML Includes – ShopTalk\n668: Jake Archibald on Native HTML Includes - YouTube\n605: Jim Nielsen on Subversive URLs, Blogging + AI, and Design Engineers – ShopTalk\n504: Jim Nielsen Blogging, App Icons, Color, and Images – ShopTalk\nA social media ethos - daverupert.com\nSponsors",
          "itemLink": "https://shoptalkshow.com/676/"
        }
      ]
    },
    {
      "feedTitle": "Soft Skills Engineering",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "Episode 472: Should my junior dev use AI and thrown in to ETL",
          "media": "https://dts.podtrac.com/redirect.mp3/download.softskills.audio/sse-472.mp3?source=rss",
          "showNotes": "In this episode, Dave and Jamison answer these questions:\nI’m the CTO of a small startup. We’re 3 devs including me and one of them is a junior developer. My current policy is to discourage the use of AI tools for the junior dev to make sure they build actual skills and don’t just prompt their way through tasks. However I’m more and more questioning my stance as AI skills will be in demand for jobs to come and I want to prepare this junior dev for a life after my startup. How would you do this? What’s the AI coding assistant policy in your companies. Is it the same for all seniority levels?\nHi everyone! Long-time listener here, and I really appreciate all the insights you share. Greetings from Brazil!\nI recently joined a large company (5,000 employees) that hired around 500 developers in a short time. It seems like they didn’t have enough projects aligned with everyone’s expertise, so many of us, myself included, were placed in roles that don’t match our skill sets.\nI’m a web developer with experience in Java and TypeScript, but I was assigned to a data-focused project involving Python and ETL pipelines, which is far from my area of interest or strength. I’ve already mentioned to my manager that I don’t have experience in this stack, but the response was that the priority is to place people in projects. He told me to “keep [him] in the loop if you don’t feel comfortable”, but I’m not sure that should I do.\nThe company culture is chill, and I don’t want to come across as unwilling to work or ungrateful. But I also want to grow in the right direction for my career. How can I ask for a project change, ideally one that aligns with my web development background, without sounding negative or uncooperative? Maybe wait for like 3 months inside of this project and then ask for a change?\nThanks so much for your thoughts!",
          "itemLink": "https://softskills.audio/2025/08/04/episode-472-should-my-junior-dev-use-ai-and-thrown-in-to-etl/"
        }
      ]
    },
    {
      "feedTitle": "Front-End Fire",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "Is es-toolkit the Lodash Killer?",
          "media": "https://www.buzzsprout.com/2226499/episodes/17608340-is-es-toolkit-the-lodash-killer.mp3",
          "showNotes": "There’s a new utility library in town called es-toolkit, and it’s gunning for Lodash. 2-3x faster, 97% smaller, full TypeScript support, and using modern JavaScript APIs, es-toolkit’s just added a “Lodash compatibility layer” to ensure an identical API and 100% Lodash compatibility.\noRPC is the newest wrinkle in the Remote Procedural Call (RPC) world, and it promotes easy to build APIs that are end-to-end type-safe and adhere to OpenAPI standards. \nStack Overflow’s 15th developer survey results are in, and the learnings are... interesting. Some of the takeaways are expected (React’s still very popular, lots of devs have at least tried AI tools), but some seem willfully wrong (SO claims it’s a new resource for devs that need to solve AI-related issues, but 43% of respondents said they rarely or never visit the site anymore). \nEither way, SO’s use has declined dramatically over the last few years due to the rise of AI, and we’ll see how much longer it can hang on as a vital part of the developer ecosystem.\nTimestamps:\n\n0:57 - es-toolkit update\n7:46 - oRPC\n17:13 - Stack Overflow Developer Survey\n31:43 - Bolt hackathon winners\n34:11 - Microsoft Edge Copilot Mode\n38:46 - State of HTML survey\n39:30 - What’s making us happy\n\nLinks:\n\nPaige - es-toolkit is coming for Lodash\nJack - oRPC\nTJ - Stack Overflow 2025 survey results\nBolt hackathon winners\nMicrosoft Edge Copilot Mode\nState of HTML survey\nPaige - Monopoly Deal card game\nJack - Gridfinity 3D printed grid storage system\nTJ - NY Times Games App\n\nThanks as always to our sponsor, the Blue Collar Coder channel on YouTube. You can join us in our Discord channel, explore our website and reach us via email, or talk to us on X, Bluesky, or YouTube.\n\nFront-end Fire website\nBlue Collar Coder on YouTube\nBlue Collar Coder on Discord\nReach out via email\nTweet at us on X @front_end_fire\nFollow us on Bluesky @front-end-fire.com\nSubscribe to our YouTube channel @Front-EndFirePodcast",
          "itemLink": "https://www.buzzsprout.com/2226499"
        }
      ]
    },
    {
      "feedTitle": "Modern Web",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "What is AI Agentic Experience and Why Provide a Great AX for Users?",
          "media": "https://anchor.fm/s/f9191780/podcast/play/106502894/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-7-6%2F405195918-44100-2-d432a1fe87da6.mp3",
          "showNotes": "In this episode of the Modern Web Podcast, hosts Rob Ocel and Danny Thompson talk with Sean Roberts, Head of AX Architecture and Distinguished Engineer at Netlify, about the emerging discipline of Agentic Experience (AX). They explore how AX is reshaping how we design services for AI agents, what makes an agent experience successful, and why traditional user flows often break down in agent-driven systems. Sean discusses the role of MCPs, the challenges of discoverability, and the future of content delivery in an agent-first web. They also dig into real-world examples, like how an agent accidentally took down Netlify’s homepage, and debate whether CMSs still have a place in this new landscape. Key points from this episode- Agent experience is already part of every digital service and needs to be intentionally designed to ensure agents can interact effectively- SEO still matters but new practices like lightweight pages, structured content, and llm dot txt files help improve discoverability for agents- Systems that require human confirmation for basic actions create friction for agents and should be redesigned to allow autonomous task completion- LLMs make it possible to turn unstructured content into structured data on demand which raises questions about whether traditional CMS platforms are still necessary.Sean Roberts: https://www.linkedin.com/in/developsean/Danny Thompson: https://www.linkedin.com/in/dthompsondev/Rob Ocel: https://www.linkedin.com/in/robocel/This Dot Labs Twitter: https://x.com/ThisDotLabsThis Dot Media Twitter: https://x.com/ThisDotMediaThis Dot Labs Instagram: https://www.instagram.com/thisdotlabs/This Dot Labs Facebook: https://www.facebook.com/thisdot/This Dot Labs Bluesky: https://bsky.app/profile/thisdotlabs.bsky.socialSponsored by This Dot Labs: ai.thisdot.co",
          "itemLink": "https://podcasters.spotify.com/pod/show/modern-web/episodes/What-is-AI-Agentic-Experience-and-Why-Provide-a-Great-AX-for-Users-e36gn9e"
        }
      ]
    },
    {
      "feedTitle": "Indie Bites",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "devtools.fm: Developer Tools, Open Source, Software Development",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "Bereket Engida - Better-Auth",
          "media": "https://anchor.fm/s/dd6922b4/podcast/play/106692174/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-7-10%2F405439297-44100-2-367df06215f74.mp3",
          "showNotes": "This week we talk to Bereket Engida (Beka) the creator of better-auth. Better-auth is an extensible, open source authentication library that's taking the JavaScript community by storm.- https://www.beka.et/- https://better-auth.comBecome a paid subscriber our patreon, spotify, or apple podcasts to help support the podcast. https://www.patreon.com/devtoolsfmhttps://podcasters.spotify.com/pod/show/devtoolsfm/subscribehttps://podcasts.apple.com/us/podcast/devtools-fm/id1566647758https://www.youtube.com/@devtoolsfm/membership",
          "itemLink": "https://podcasters.spotify.com/pod/show/devtoolsfm/episodes/Bereket-Engida---Better-Auth-e36mg4e"
        }
      ]
    },
    {
      "feedTitle": "DevTalles",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "HTTP 203",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "Frontend First",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "Svelte Radio",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "JS Party: JavaScript, CSS, Web Development",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "PodRocket - A web development podcast from LogRocket",
      "updateStatus": 1,
      "data": [
        {
          "itemTitle": "NuxtLabs joins Vercel with Daniel Roe",
          "media": "https://dts.podtrac.com/redirect.mp3/aphid.fireside.fm/d/1437767933/3911462c-bca2-48c2-9103-610ba304c673/9cf47270-d1c0-4ab7-9a05-34074db6a18d.mp3",
          "showNotes": "In this episode of PodRocket, Daniel Roe, lead dev over at NuxtLabs, joins Paul to discuss the big news: NuxtLabs is joining Vercel. They dive into what this partnership means for Nuxt, the independence of the open-source framework, and how products like Nuxt UI Pro, Nuxt Studio, and Nuxt Hub are evolving. Daniel also shares insights on zero-config deployments, maintaining choice for developers, and the philosophy behind keeping Nuxt open and flexible.\nLinks\nWebsite: https://roe.dev\nLinkedIn: https://www.linkedin.com/in/daniel-roe\nGithub: https://github.com/danielroe\nBluesky: https://bsky.app/profile/danielroe.dev\nMastodon: https://mastodon.roe.dev/@daniel\nTwitch: https://www.twitch.tv/danielroe\nYouTube: https://www.youtube.com/@danielroe\nResources\nAnnouncement Post: https://vercel.com/blog/nuxtlabs-joins-vercel\nNuxt Labs: https://nuxtlabs.com\nWe want to hear from you!\nHow did you find us? Did you see us on Twitter? In a newsletter? Or maybe we were recommended by a friend?\nFill out our listener survey (https://t.co/oKVAEXipxu)! https://t.co/oKVAEXipxu\nLet us know by sending an email to our producer, Em, at emily.kochanek@logrocket.com (mailto:emily.kochanek@logrocket.com), or tweet at us at PodRocketPod (https://twitter.com/PodRocketpod).\nFollow us. Get free stickers.\nFollow us on Apple Podcasts, fill out this form (https://podrocket.logrocket.com/get-podrocket-stickers), and we’ll send you free PodRocket stickers!\nWhat does LogRocket do?\nLogRocket provides AI-first session replay and analytics that surfaces the UX and technical issues impacting user experiences. Start understanding where your users are struggling by trying it for free at LogRocket.com. Try LogRocket for free today. (https://logrocket.com/signup/?pdr) Special Guest: Daniel Roe.",
          "itemLink": "http://podrocket.logrocket.com/nuxtlabs-joins-vercel-daniel-roe"
        }
      ]
    },
    {
      "feedTitle": "Web Rush",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "Jamstack Radio",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "JavaScript Jabber",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "DejaVue",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "Syntax - Tasty Web Development Treats",
      "updateStatus": 2,
      "data": [
        {
          "itemTitle": "926: RSS Is NOT Dead",
          "media": "https://traffic.megaphone.fm/FSI1474884990.mp3?updated=1754432911",
          "showNotes": "Scott and CJ explore why RSS still matters and how it’s more underused than outdated. They discuss how to self-host RSS readers, escape the noise of the modern web, and reclaim a cleaner, ad-free reading experience across devices.\n\n\nShow Notes\n\n\n\n00:00 Welcome to Syntax!\n\n\n01:09 Brought to you by Sentry.io\n\n\n\n02:41 What is RSS and how does it work?\n\nRSS\n\nAtom (web standard)\n\nJSON Feed\n\n\n\n\n\n06:14 Hosting your own RSS server: Miniflux, FreshRSS, and more\n\nMiniflux\n\nFreshRSS\n\n\n\n\n\n11:00 Decluttering the web with article scraping\n\n\n12:38 Best RSS clients for desktop and mobile\n\nCapy Reader\n\nGoogle Reader\n\nReadKit\n\nPocket is shutting down\n\nwallabag\n\nmymind\n\n\n\n\n\n18:51 Where to find RSS feeds\n\nThe Brutalist Report\n\nProgramming Subreddit\n\nHacker News\n\nBlueSky\n\n\n\n\n\n\nShameless Plugs\n\n\nSyntax YouTube Channel: Cursor User Tries Claude Code\n\n\n\nHit us up on Socials!\n\nSyntax: X Instagram Tiktok LinkedIn Threads\n\nWes: X Instagram Tiktok LinkedIn Threads\n\nScott: X Instagram Tiktok LinkedIn Threads\n\nRandy: X Instagram YouTube Threads",
          "itemLink": "https://syntax.fm/926"
        },
        {
          "itemTitle": "925: Scott & CJ’s Fave Productivity Apps & Web Apps",
          "media": "https://traffic.megaphone.fm/FSI1465775616.mp3",
          "showNotes": "Scott and CJ go full productivity nerd, swapping notes on their favorite web apps for writing, coding, planning, and more. From terminals to to-do lists to dumb phones, it’s a deep dive into the tools powering their workflows.\n\n\nShow Notes\n\n\n\n00:00 Welcome to Syntax!\n\n\n00:35 Brought to you by Sentry.io.\n\n\n01:56 Text to speech or speech to text.\n\n\n02:20 Superwhisper.\n\n\n\n\n\n08:29 Kiro.\n\n\n16:16 CJ’s current editor preference.\n\n\n17:59 Finding the right editor.\n\n\n18:47 Terminals.\n\n\n20:22 Ghostty.\n\n\n\n\n\n24:16 Note-taking.\n\n\n26:32 Obsidian.\n\n\n30:24 Logseq.\n\n\n\n\n\n31:03 Todo lists.\n\n\n31:08 Tweek.so\n\n\n\n34:42 Trello.\n\n\n37:25 Notion Calendar.\n\n\n\n\n\n38:55 Email.\n\n\n43:21 FairEmail.\n\n\n\n\n\n43:43 Dumb phones.\n\n\n45:10 Olauncher\n\n\n\n\n\n\n47:39 Audio Bookshelf.\n\n\n\nHit us up on Socials!\n\nSyntax: X Instagram Tiktok LinkedIn Threads\n\nWes: X Instagram Tiktok LinkedIn Threads\n\nScott: X Instagram Tiktok LinkedIn Threads\n\nRandy: X Instagram YouTube Threads",
          "itemLink": "https://syntax.fm/925"
        }
      ]
    },
    {
      "feedTitle": "Rust Review",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "Front End Happy Hour",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "Off The Main Thread",
      "updateStatus": 0,
      "data": []
    },
    {
      "feedTitle": "The CSS Podcast",
      "updateStatus": 0,
      "data": []
    }
  ]
}