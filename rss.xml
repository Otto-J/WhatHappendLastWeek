<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link href="https://&lt;your-domain-here&gt;/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Weekly Podcast Updates</title>
    <link>https://&lt;your-project-link-here&gt;</link>
    <language>en-us</language>
    <description>Weekly digest of podcast episodes from week 42, starting 2025-10-13.</description>
    <lastBuildDate>Mon, 20 Oct 2025 00:14:44 GMT</lastBuildDate>
    <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
    <item>
      <title>npm Worms &amp; RubyGems Coups: Trust Issues in Open Source</title>
      <link>https://play.cdnstream1.com/s/radicalcompany/whiskey-web-and-whatnot-bda353/npm-worms-rubygems-coups-8f551a</link>
      <description>This week, Robbie, Chuck, and Adam talk about the worst whiskey they’ve tasted, Tailwind as a “state management library,” and recent security scares in open source. Also — dependency hygiene, developer visa drama, and whether inflated tech salaries are finally being reckoned with.
In this episode:
(00:00) - Intro
(02:14) - Whiskey rating &amp; review: Evan Williams Kentucky Straight Bourbon Whiskey
(13:00) - What's with all the recent web dev security issues?
(28:39) - Is Tailwind secretly the worst state management library?
(32:45) - Visa chaos: H-1Bs, gold cards, and reverse immigration
(40:51) - Are tech salaries being intentionally driven down?
(49:45) - Adam’s AI experiment with Claude + Parallelize
(54:09) - Why AI should specialize (and stop trying to do everything)
(54:44) - Best AI tools right now
(01:01:16) - Chuck’s VPN chaos + funny wifi names
(01:04:04) - Plugs
Links
GoDaddy: https://www.godaddy.com/
Bob Parsons: https://en.wikipedia.org/wiki/Bob_Parsons
Intuit: https://www.intuit.com/
Evan Williams Kentucky Straight Bourbon Whiskey: http://evanwilliams.com/straight-bourbon
Wrigley Chew: https://en.wikipedia.org/wiki/Wrigley_Company
Bazooka: https://www.bazookajoe.com/
Juicy Fruit: https://en.wikipedia.org/wiki/Juicy_Fruit
Cinnamon Toast Crunch: https://www.cinnamontoastcrunch.com/
Jack Daniel's: https://www.jackdaniels.com/
Crown Royal Black: https://www.crownroyal.com/canadian-whisky/crown-royal-black
Suntory World Whiskey Ao: https://house.suntory.com/ao-whisky
Fresca Mixed: https://www.frescamixed.com/
All Things Open: https://allthingsopen.org/
Ken Wheeler: https://x.com/ken_wheeler/
JavaScript: https://developer.mozilla.org/en-US/docs/Web/JavaScript
Ruby: https://www.ruby-lang.org/
NPM: https://www.npmjs.com/
GitHub: https://github.com/
Blockchain: https://en.wikipedia.org/wiki/Blockchain
pNPM: https://pnpm.io/
Ransom: https://www.imdb.com/title/tt0117438/
Reddit: https://www.reddit.com/
WordPress: https://wordpress.org
David Cramer: https://x.com/zeeg
Django: https://www.djangoproject.com/
Netflix: https://www.netflix.com/
SemVer: https://semver.org/
Google: https://www.google.com/
Snowpack: https://www.snowpack.dev/
Socket.io: https://socket.io/
Guillermo Rauch: https://x.com/rauchg
Socket.dev: https://socket.dev/
Tailwind CSS: https://tailwindcss.com/
David K Piano: https://x.com/DavidKPiano
Tesla: https://www.tesla.com/
Next.js: https://nextjs.org/
OpenAI: https://openai.com
Amazon: https://amazon.com
Jason Lengstorf: https://x.com/jlengstorf
Perl: https://www.perl.org/
Rust: https://www.rust-lang.org/
Cobol: https://en.wikipedia.org/wiki/COBOL
Jarred Sumner: https://x.com/jarredsumner
Bun: https://bun.com/
Zig: https://ziglang.org/
Facebook: https://www.facebook.com/
Claude: https://claude.ai/
Codex: https://openai.com/codex/
Opencode: https://opencode.ai/
Gemini: https://gemini.google.com/
Ep 92: Hot Takes, Bun, and Zig with Jarred Sumner: https://whiskey.fm/hot-takes-bun-and-zig-with-jarred-sumner
Neovim: https://neovim.io/
Bolt: https://bolt.new/
Lovable: https://lovable.dev/
Spec Kit: https://github.com/github/spec-kit
South Park: https://en.wikipedia.org/wiki/South_Park
Proton VPN: https://protonvpn.com/
HBO Max: https://www.hbomax.com/
Raspberry Pi: https://www.raspberrypi.com
Stephen King: https://stephenking.com/
Cujo: https://en.wikipedia.org/wiki/Cujo
Nerdy.dev: https://nerdy.dev/
Starpod.dev: https://starpod.dev/
Como FC: https://comofootball.com/
Connect with the hosts
Robbie Wagner: https://x.com/RobbieTheWagner
Chuck Carpenter: https://x.com/CharlesWthe3rd
Adam Argyle: https://x.com/argyleink
Subscribe and stay in touch
Website: https://whiskey.fm
Apple Podcasts: https://podcasts.apple.com/us/podcast/whiskey-web-and-whatnot/id1552776603
Spotify: https://open.spotify.com/show/19jiuHAqzeKnkleQUpZxDf
Overcast: https://overcast.fm/itunes1552776603
YouTube: https://www.youtube.com/@WhiskeyWebAndWhatnot
Whiskey Web and Whatnot Merch
Enjoying the podcast and want us to make more? Help support us by picking up some of our fresh merch at https://whiskey.fund.</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>https://play.cdnstream1.com/s/radicalcompany/whiskey-web-and-whatnot-bda353/npm-worms-rubygems-coups-8f551a</guid>
      <enclosure url="https://op3.dev/e/pds.cdnstream1.com/p/radicalcompany/whiskey-web-and-whatnot-bda353/npm-worms-rubygems-coups-8f551a/audio.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>Whiskey Web and Whatnot: Web Development, Neat</itunes:author>
      <itunes:summary>This week, Robbie, Chuck, and Adam talk about the worst whiskey they’ve tasted, Tailwind as a “state management library,” and recent security scares in open source. Also — dependency hygiene, developer visa drama, and whether inflated tech salaries are finally being reckoned with.
In this episode:
(00:00) - Intro
(02:14) - Whiskey rating &amp; review: Evan Williams Kentucky Straight Bourbon Whiskey
(13:00) - What's with all the recent web dev security issues?
(28:39) - Is Tailwind secretly the worst state management library?
(32:45) - Visa chaos: H-1Bs, gold cards, and reverse immigration
(40:51) - Are tech salaries being intentionally driven down?
(49:45) - Adam’s AI experiment with Claude + Parallelize
(54:09) - Why AI should specialize (and stop trying to do everything)
(54:44) - Best AI tools right now
(01:01:16) - Chuck’s VPN chaos + funny wifi names
(01:04:04) - Plugs
Links
GoDaddy: https://www.godaddy.com/
Bob Parsons: https://en.wikipedia.org/wiki/Bob_Parsons
Intuit: https://www.intuit.com/
Evan Williams Kentucky Straight Bourbon Whiskey: http://evanwilliams.com/straight-bourbon
Wrigley Chew: https://en.wikipedia.org/wiki/Wrigley_Company
Bazooka: https://www.bazookajoe.com/
Juicy Fruit: https://en.wikipedia.org/wiki/Juicy_Fruit
Cinnamon Toast Crunch: https://www.cinnamontoastcrunch.com/
Jack Daniel's: https://www.jackdaniels.com/
Crown Royal Black: https://www.crownroyal.com/canadian-whisky/crown-royal-black
Suntory World Whiskey Ao: https://house.suntory.com/ao-whisky
Fresca Mixed: https://www.frescamixed.com/
All Things Open: https://allthingsopen.org/
Ken Wheeler: https://x.com/ken_wheeler/
JavaScript: https://developer.mozilla.org/en-US/docs/Web/JavaScript
Ruby: https://www.ruby-lang.org/
NPM: https://www.npmjs.com/
GitHub: https://github.com/
Blockchain: https://en.wikipedia.org/wiki/Blockchain
pNPM: https://pnpm.io/
Ransom: https://www.imdb.com/title/tt0117438/
Reddit: https://www.reddit.com/
WordPress: https://wordpress.org
David Cramer: https://x.com/zeeg
Django: https://www.djangoproject.com/
Netflix: https://www.netflix.com/
SemVer: https://semver.org/
Google: https://www.google.com/
Snowpack: https://www.snowpack.dev/
Socket.io: https://socket.io/
Guillermo Rauch: https://x.com/rauchg
Socket.dev: https://socket.dev/
Tailwind CSS: https://tailwindcss.com/
David K Piano: https://x.com/DavidKPiano
Tesla: https://www.tesla.com/
Next.js: https://nextjs.org/
OpenAI: https://openai.com
Amazon: https://amazon.com
Jason Lengstorf: https://x.com/jlengstorf
Perl: https://www.perl.org/
Rust: https://www.rust-lang.org/
Cobol: https://en.wikipedia.org/wiki/COBOL
Jarred Sumner: https://x.com/jarredsumner
Bun: https://bun.com/
Zig: https://ziglang.org/
Facebook: https://www.facebook.com/
Claude: https://claude.ai/
Codex: https://openai.com/codex/
Opencode: https://opencode.ai/
Gemini: https://gemini.google.com/
Ep 92: Hot Takes, Bun, and Zig with Jarred Sumner: https://whiskey.fm/hot-takes-bun-and-zig-with-jarred-sumner
Neovim: https://neovim.io/
Bolt: https://bolt.new/
Lovable: https://lovable.dev/
Spec Kit: https://github.com/github/spec-kit
South Park: https://en.wikipedia.org/wiki/South_Park
Proton VPN: https://protonvpn.com/
HBO Max: https://www.hbomax.com/
Raspberry Pi: https://www.raspberrypi.com
Stephen King: https://stephenking.com/
Cujo: https://en.wikipedia.org/wiki/Cujo
Nerdy.dev: https://nerdy.dev/
Starpod.dev: https://starpod.dev/
Como FC: https://comofootball.com/
Connect with the hosts
Robbie Wagner: https://x.com/RobbieTheWagner
Chuck Carpenter: https://x.com/CharlesWthe3rd
Adam Argyle: https://x.com/argyleink
Subscribe and stay in touch
Website: https://whiskey.fm
Apple Podcasts: https://podcasts.apple.com/us/podcast/whiskey-web-and-whatnot/id1552776603
Spotify: https://open.spotify.com/show/19jiuHAqzeKnkleQUpZxDf
Overcast: https://overcast.fm/itunes1552776603
YouTube: https://www.youtube.com/@WhiskeyWebAndWhatnot
Whiskey Web and Whatnot Merch
Enjoying the podcast and want us to make more? Help support us by picking up some of our fresh merch at https://whiskey.fund.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>686: Todd Libby on Deceptive Patterns</title>
      <link>https://shoptalkshow.com/686/</link>
      <description>Show Description
Todd Libby is on the show to talk with us about deceptive patterns on the web, what WCAG is and who it's for, and 5 deceptive patterns in use on the web today.
Listen on Website
Watch on YouTube
Guests
Todd Libby
Guest's Main URL • Guest's Social
Web developer and developer advocate from Portland, Maine now living in Phoenix, Arizona. I had been a developer for most of my 25 years professionally in tech before moving to accessibility.
Links

Front End Nerdery
Trump used dark patterns to trick supporters into donating millions more than intended | The Verge
Death to Bullshit | Brad Frost
Deceptive Patterns (aka Dark Patterns) - spreading awareness since 2010
The Architecture of Anxiety and Shame, Part One</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>https://shoptalkshow.com/686/</guid>
      <enclosure url="https://cdn.simplecast.com/audio/167887a0-ac00-4cf9-bc69-b5ca845997db/episodes/e7be52b5-b6f6-4b92-91a6-3bf3fdd383e6/audio/c75aae44-0235-4e3c-8731-49680e8dab22/default_tc.mp3?nocache" type="audio/mpeg" length="0"/>
      <itunes:author>ShopTalk</itunes:author>
      <itunes:summary>Show Description
Todd Libby is on the show to talk with us about deceptive patterns on the web, what WCAG is and who it's for, and 5 deceptive patterns in use on the web today.
Listen on Website
Watch on YouTube
Guests
Todd Libby
Guest's Main URL • Guest's Social
Web developer and developer advocate from Portland, Maine now living in Phoenix, Arizona. I had been a developer for most of my 25 years professionally in tech before moving to accessibility.
Links

Front End Nerdery
Trump used dark patterns to trick supporters into donating millions more than intended | The Verge
Death to Bullshit | Brad Frost
Deceptive Patterns (aka Dark Patterns) - spreading awareness since 2010
The Architecture of Anxiety and Shame, Part One</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Episode 482: I got a promotion, but a tiny raise and an imposter interviewed for my team</title>
      <link>https://softskills.audio/2025/10/13/episode-482-i-got-a-promotion,-but-a-tiny-raise-and-an-imposter-interviewed-for-my-team/</link>
      <description>In this episode, Dave and Jamison answer these questions:
After a year of trying, I recently got promoted to staff engineer!
It’s great to receive recognition for my work, but i’m not actually very happy, because I only got a 4% raise! I spoke with a former coworker about how much a staff engineer in my role should expect, and he said that he would be insulted by less than . My comp is now slightly below !
In addition to this, times are tough for the business, so it seems unlikely that we’ll get annual bonuses, meaning I likely won’t even get to appreciate the larger target staff bonus! What a bummer!
How should I approach this? A year and a half ago after getting a below inflation raise, I was told I was at the top of my level’s pay band and would need to get promoted if I wanted to go much higher. Now that I’ve gotten promoted, it seems like that wasn’t true! I should be grateful that I still have a job and got promoted and got any increase, but I feel like I’m being short changed! How can I talk to my manager to see about getting more money?
My company does not address complaints. Here are two examples.
On my first day, the lead engineer told me not to participate in the project. He was impossible to work with: He’d hold up PR’s for 3 months because of linting and prettier rules. Eventually, I figured out he was exceptionally insecure and wanted no feedback or anyone to expose his technical weaknesses. I conflicted with him a lot and got shuffled to another department.
My 2nd example comes from a trainee. I helped him out everyday after standup for 30 minutes. How he passed his interview, I don’t know. He didn’t know what a semicolon was after a 4 years bachelor in computer science and 6 months of being a trainee. I complained to a friend at work who had, I didn’t know, interviewed the trainee. My friend was surprised, and so we hopped on a call with the trainee who didn’t recognize my friend. After snooping around on social media, we found the guy who had done the interview, the trainee’s brother. I told HR &amp; my department head. Nothing happened.
Here’s the question: Getting kicked out of a department ruined my confidence. I have a safe, secure job where there’s no pressure. But my firm doesn’t address complaints properly. Time and time again, people will complain about the linting/prettier guy or other issues like the trainee and nothing is done. Should I leave? I work on a greenfield project here. Switching to a (likely) legacy codebase I didn’t build and dealing with higher pay/expectations is very daunting.</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>https://softskills.audio/2025/10/13/episode-482-i-got-a-promotion,-but-a-tiny-raise-and-an-imposter-interviewed-for-my-team/</guid>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/download.softskills.audio/sse-482.mp3?source=rss" type="audio/mpeg" length="0"/>
      <itunes:author>Soft Skills Engineering</itunes:author>
      <itunes:summary>In this episode, Dave and Jamison answer these questions:
After a year of trying, I recently got promoted to staff engineer!
It’s great to receive recognition for my work, but i’m not actually very happy, because I only got a 4% raise! I spoke with a former coworker about how much a staff engineer in my role should expect, and he said that he would be insulted by less than . My comp is now slightly below !
In addition to this, times are tough for the business, so it seems unlikely that we’ll get annual bonuses, meaning I likely won’t even get to appreciate the larger target staff bonus! What a bummer!
How should I approach this? A year and a half ago after getting a below inflation raise, I was told I was at the top of my level’s pay band and would need to get promoted if I wanted to go much higher. Now that I’ve gotten promoted, it seems like that wasn’t true! I should be grateful that I still have a job and got promoted and got any increase, but I feel like I’m being short changed! How can I talk to my manager to see about getting more money?
My company does not address complaints. Here are two examples.
On my first day, the lead engineer told me not to participate in the project. He was impossible to work with: He’d hold up PR’s for 3 months because of linting and prettier rules. Eventually, I figured out he was exceptionally insecure and wanted no feedback or anyone to expose his technical weaknesses. I conflicted with him a lot and got shuffled to another department.
My 2nd example comes from a trainee. I helped him out everyday after standup for 30 minutes. How he passed his interview, I don’t know. He didn’t know what a semicolon was after a 4 years bachelor in computer science and 6 months of being a trainee. I complained to a friend at work who had, I didn’t know, interviewed the trainee. My friend was surprised, and so we hopped on a call with the trainee who didn’t recognize my friend. After snooping around on social media, we found the guy who had done the interview, the trainee’s brother. I told HR &amp; my department head. Nothing happened.
Here’s the question: Getting kicked out of a department ruined my confidence. I have a safe, secure job where there’s no pressure. But my firm doesn’t address complaints properly. Time and time again, people will complain about the linting/prettier guy or other issues like the trainee and nothing is done. Should I leave? I work on a greenfield project here. Switching to a (likely) legacy codebase I didn’t build and dealing with higher pay/expectations is very daunting.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>React Goes Independent: Inside the New React Foundation</title>
      <link>https://www.buzzsprout.com/2226499</link>
      <description>It’s been a big week for React devs as the annual React Conf just wrapped up in Las Vegas. 
The biggest news? React and React Native are moving out from under Meta to a new React Foundation with an independent technical governance structure. The React Foundation’s mission will be to support the React community and ecosystem, and a board of directors will steer it going forward.
Also in time for React Conf, React 19.2 dropped, and it brings new features like partial pre-rendering, a new useEffectEvent hook, and an &lt;Activity/&gt; component that lets devs prioritize rendering  tomaintain state and make navigation faster.
Not to be outdone, Cloudflare announced a new RPC protocol called Cap’n Web, which is a pure TypeScript implementation. What makes Cap’n Web unique is that it supports bi-directional calling, promise pipelining, and lets users design RPC interfaces that look like regular JavaScript APIs.
Chapter Markers:

03:18 - React Foundation
07:10 - React Compiler 1.0 and React 19.2
17:13 - Cap’n Web
24:19 - Opera Neon
27:16 - The EU is considering cookie law changes
31:43 - The Internet Archive hits 1 trillion pages
33:33 - What’s making us happy

Links:

Paige - Cap’n Web pure TypeScript RPC system
Jack - Introducing the React Foundation
TJ - React 19.2
European policymakers may be fixing the cookie banner headache they created
Opera wants you to pay $20 per month for its new AI browser
Celebrating 1 Trillion Web Pages Archived 

What Makes Us Happy this Week:

Paige - The Terminal List: Dark Wolf TV series
Jack - Fender Acoustasonic guitar
TJ - Portable stadium seat addition

Thanks as always to our sponsor, the Blue Collar Coder channel on YouTube. You can join us in our Discord channel, explore our website and reach us via email, or talk to us on X, Bluesky, or YouTube.

Front-end Fire website
Blue Collar Coder on YouTube
Blue Collar Coder on Discord
Reach out via email
Tweet at us on X @front_end_fire
Follow us on Bluesky @front-end-fire.com
Subscribe to our YouTube channel @Front-EndFirePodcast</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>https://www.buzzsprout.com/2226499</guid>
      <enclosure url="https://www.buzzsprout.com/2226499/episodes/18000092-react-goes-independent-inside-the-new-react-foundation.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>Front-End Fire</itunes:author>
      <itunes:summary>It’s been a big week for React devs as the annual React Conf just wrapped up in Las Vegas. 
The biggest news? React and React Native are moving out from under Meta to a new React Foundation with an independent technical governance structure. The React Foundation’s mission will be to support the React community and ecosystem, and a board of directors will steer it going forward.
Also in time for React Conf, React 19.2 dropped, and it brings new features like partial pre-rendering, a new useEffectEvent hook, and an &lt;Activity/&gt; component that lets devs prioritize rendering  tomaintain state and make navigation faster.
Not to be outdone, Cloudflare announced a new RPC protocol called Cap’n Web, which is a pure TypeScript implementation. What makes Cap’n Web unique is that it supports bi-directional calling, promise pipelining, and lets users design RPC interfaces that look like regular JavaScript APIs.
Chapter Markers:

03:18 - React Foundation
07:10 - React Compiler 1.0 and React 19.2
17:13 - Cap’n Web
24:19 - Opera Neon
27:16 - The EU is considering cookie law changes
31:43 - The Internet Archive hits 1 trillion pages
33:33 - What’s making us happy

Links:

Paige - Cap’n Web pure TypeScript RPC system
Jack - Introducing the React Foundation
TJ - React 19.2
European policymakers may be fixing the cookie banner headache they created
Opera wants you to pay $20 per month for its new AI browser
Celebrating 1 Trillion Web Pages Archived 

What Makes Us Happy this Week:

Paige - The Terminal List: Dark Wolf TV series
Jack - Fender Acoustasonic guitar
TJ - Portable stadium seat addition

Thanks as always to our sponsor, the Blue Collar Coder channel on YouTube. You can join us in our Discord channel, explore our website and reach us via email, or talk to us on X, Bluesky, or YouTube.

Front-end Fire website
Blue Collar Coder on YouTube
Blue Collar Coder on Discord
Reach out via email
Tweet at us on X @front_end_fire
Follow us on Bluesky @front-end-fire.com
Subscribe to our YouTube channel @Front-EndFirePodcast</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>The Cloud Built AI. Can It Survive What AI Needs Next?</title>
      <link>https://podcasters.spotify.com/pod/show/modern-web/episodes/The-Cloud-Built-AI--Can-It-Survive-What-AI-Needs-Next-e39g1tv</link>
      <description>On this episode of the Modern Web Podcast, hosts Rob Ocel and Danny Thompson welcome Miles Ward, CTO of SADA, for an in-depth conversation about the intersection of cloud computing and AI. Miles shares his career journey from early days at AWS and Google Cloud to leading SADA through its acquisition by Insight, offering a rare perspective on the evolution of solutions architecture and cloud adoption at scale.The discussion covers the realities of cloud “repatriation,” why GPUs have shifted some workloads back on-prem or to niche “neo-cloud” providers, and how cloud infrastructure remains the backbone of most AI initiatives. Miles breaks down practical concerns for organizations, from token pricing and GPU costs to scaling AI features without blowing budgets. He also highlights how AI adoption exposes weak organizational habits, why good data and strong processes matter more than hype, and how developers should view AI as intelligence augmentation rather than replacement.Key Takeaways:- Miles Ward, former early AWS Solutions Architect, founder of the SA practice at Google Cloud, and now CTO at SADA (acquired by Insight), brings a deep history in scaling infrastructure and AI workloads.- Cloud repatriation is rare. The main exception is GPUs, where companies may rent from “neo-clouds” like CoreWeave, Crusoe, or Lambda, or occasionally use on-prem for cost and latency reasons, though data-center power constraints make this difficult.- Cloud remains essential for AI. Successful initiatives depend on cloud primitives like data, orchestration, security, and DevOps. Google’s integrated stack (custom hardware, platforms, and models) streamlines development. The best practice is to build in cloud first, then optimize or shift GPU inference later if needed.- Costs and readiness are critical. Organizations should measure AI by business outcomes rather than lines of code. Token spending needs calculators, guardrails, and model routing strategies. On-prem comes with hidden costs such as power, networking, and staffing. The real bottleneck for most companies is poor data and weak processes, not model quality.Miles Ward on Linkedin: https://www.linkedin.com/in/rishabkumar7/Rob Ocel on Linkedin: https://www.linkedin.com/in/robocel/Danny Thompson on Linkedin: https://www.linkedin.com/in/dthompsondev/This Dot Labs Twitter: https://x.com/ThisDotLabsThis Dot Media Twitter: https://x.com/ThisDotMediaThis Dot Labs Instagram: https://www.instagram.com/thisdotlabs/This Dot Labs Facebook: https://www.facebook.com/thisdot/This Dot Labs Bluesky: https://bsky.app/profile/thisdotlabs.bsky.socialSponsored by This Dot Labs: https://ai.thisdot.co/</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>https://podcasters.spotify.com/pod/show/modern-web/episodes/The-Cloud-Built-AI--Can-It-Survive-What-AI-Needs-Next-e39g1tv</guid>
      <enclosure url="https://anchor.fm/s/f9191780/podcast/play/109626751/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-9-13%2F409203400-44100-2-385ec0333b3fa.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>Modern Web</itunes:author>
      <itunes:summary>On this episode of the Modern Web Podcast, hosts Rob Ocel and Danny Thompson welcome Miles Ward, CTO of SADA, for an in-depth conversation about the intersection of cloud computing and AI. Miles shares his career journey from early days at AWS and Google Cloud to leading SADA through its acquisition by Insight, offering a rare perspective on the evolution of solutions architecture and cloud adoption at scale.The discussion covers the realities of cloud “repatriation,” why GPUs have shifted some workloads back on-prem or to niche “neo-cloud” providers, and how cloud infrastructure remains the backbone of most AI initiatives. Miles breaks down practical concerns for organizations, from token pricing and GPU costs to scaling AI features without blowing budgets. He also highlights how AI adoption exposes weak organizational habits, why good data and strong processes matter more than hype, and how developers should view AI as intelligence augmentation rather than replacement.Key Takeaways:- Miles Ward, former early AWS Solutions Architect, founder of the SA practice at Google Cloud, and now CTO at SADA (acquired by Insight), brings a deep history in scaling infrastructure and AI workloads.- Cloud repatriation is rare. The main exception is GPUs, where companies may rent from “neo-clouds” like CoreWeave, Crusoe, or Lambda, or occasionally use on-prem for cost and latency reasons, though data-center power constraints make this difficult.- Cloud remains essential for AI. Successful initiatives depend on cloud primitives like data, orchestration, security, and DevOps. Google’s integrated stack (custom hardware, platforms, and models) streamlines development. The best practice is to build in cloud first, then optimize or shift GPU inference later if needed.- Costs and readiness are critical. Organizations should measure AI by business outcomes rather than lines of code. Token spending needs calculators, guardrails, and model routing strategies. On-prem comes with hidden costs such as power, networking, and staffing. The real bottleneck for most companies is poor data and weak processes, not model quality.Miles Ward on Linkedin: https://www.linkedin.com/in/rishabkumar7/Rob Ocel on Linkedin: https://www.linkedin.com/in/robocel/Danny Thompson on Linkedin: https://www.linkedin.com/in/dthompsondev/This Dot Labs Twitter: https://x.com/ThisDotLabsThis Dot Media Twitter: https://x.com/ThisDotMediaThis Dot Labs Instagram: https://www.instagram.com/thisdotlabs/This Dot Labs Facebook: https://www.facebook.com/thisdot/This Dot Labs Bluesky: https://bsky.app/profile/thisdotlabs.bsky.socialSponsored by This Dot Labs: https://ai.thisdot.co/</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>DevTalles 231- MCPs y herramientas de AI</title>
      <link>https://podcasters.spotify.com/pod/show/fernando-her85/episodes/DevTalles-231--MCPs-y-herramientas-de-AI-e39lrt6</link>
      <description>En este episodio exploramos cómo las herramientas de inteligencia artificial —desde los MCPs hasta asistentes como Cursor, Copilot, Jules o Warp— están cambiando la forma en que los programadores escriben, revisan y despliegan código. Hablamos sobre sus ventajas reales, los desafíos técnicos y el mito de que la IA convierte a cualquiera en programador.


🔗 Mi Web Personal: https://fernando-herrera.com🎙️ Mi Podcast: https://anchor.fm/fernando-her85👥 Mi Twitter: https://twitter.com/Fernando_Her85🖼️ Mi Instagram: https://www.instagram.com/fernando_her85/👨🏻‍🏫 Perfil de instructor | Udemy: https://www.udemy.com/user/550c38655ec11/👨🏻‍💻 {d/t} DevTalles: https://cursos.devtalles.com/📺 {d/t} DevTalles YouTube: https://www.youtube.com/@DevTalles👨🏻‍🎓 {d/t} DevTalles LinkedIn: https://www.linkedin.com/company/devtalles/📱 {d/t} DevTalles Twitter: https://twitter.com/DevTalles🚀 {d/t} DevTalles Comunidad Discord: https://discord.gg/pBjEVYTC7t🎥 TikTok: https://www.tiktok.com/@devtallescorp👍 {d/t} DevTalles Facebook: https://www.facebook.com/DevTallesCorp💻 #Programacion #Development #Developer #FernandoHerrera #DevTalles #Fullstack #OnlineLearning #professor #instructor</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>https://podcasters.spotify.com/pod/show/fernando-her85/episodes/DevTalles-231--MCPs-y-herramientas-de-AI-e39lrt6</guid>
      <enclosure url="https://anchor.fm/s/4c227378/podcast/play/109817190/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-9-17%2F409451435-44100-2-f34e54255544c.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>DevTalles</itunes:author>
      <itunes:summary>En este episodio exploramos cómo las herramientas de inteligencia artificial —desde los MCPs hasta asistentes como Cursor, Copilot, Jules o Warp— están cambiando la forma en que los programadores escriben, revisan y despliegan código. Hablamos sobre sus ventajas reales, los desafíos técnicos y el mito de que la IA convierte a cualquiera en programador.


🔗 Mi Web Personal: https://fernando-herrera.com🎙️ Mi Podcast: https://anchor.fm/fernando-her85👥 Mi Twitter: https://twitter.com/Fernando_Her85🖼️ Mi Instagram: https://www.instagram.com/fernando_her85/👨🏻‍🏫 Perfil de instructor | Udemy: https://www.udemy.com/user/550c38655ec11/👨🏻‍💻 {d/t} DevTalles: https://cursos.devtalles.com/📺 {d/t} DevTalles YouTube: https://www.youtube.com/@DevTalles👨🏻‍🎓 {d/t} DevTalles LinkedIn: https://www.linkedin.com/company/devtalles/📱 {d/t} DevTalles Twitter: https://twitter.com/DevTalles🚀 {d/t} DevTalles Comunidad Discord: https://discord.gg/pBjEVYTC7t🎥 TikTok: https://www.tiktok.com/@devtallescorp👍 {d/t} DevTalles Facebook: https://www.facebook.com/DevTallesCorp💻 #Programacion #Development #Developer #FernandoHerrera #DevTalles #Fullstack #OnlineLearning #professor #instructor</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Storybook is actually good now, with Jeppe Reinhold</title>
      <link>https://share.transistor.fm/s/c4ad9ae5</link>
      <description>Summary
In this episode of Svelt Radio, the hosts welcome Jeppe Reinhold from Chromatic to discuss the dramatic
improvements in Storybook's Svelte integration. Jeppe shares how a critical video by Brittany struggling with
Storybook setup sparked a complete overhaul of the Svelte experience, leading to better collaboration with the
Svelte core team and significant enhancements in functionality. 
The conversation covers new features like Svelte
CSF for writing stories in native Svelte syntax, improved testing capabilities, support for async components, and
upcoming features in Storybook 10. The team also discusses the philosophy behind component-driven
development, the challenges of integrating with remote functions, and Storybook's future direction including AI
support and better theming capabilities.

Links

Storybook
Storybook Svelte Guide

addon-svelte-csf

Unpopular Opinions

Antony: Svelte is an independent project! Don’t throw it in the bin
Jeppe: I like GANTT charts

Picks

Antony: Castles!
Brittney: Spain!
Jeppe: Tuple</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>https://share.transistor.fm/s/c4ad9ae5</guid>
      <enclosure url="https://media.transistor.fm/c4ad9ae5/3bec03fc.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>Svelte Radio</itunes:author>
      <itunes:summary>Summary
In this episode of Svelt Radio, the hosts welcome Jeppe Reinhold from Chromatic to discuss the dramatic
improvements in Storybook's Svelte integration. Jeppe shares how a critical video by Brittany struggling with
Storybook setup sparked a complete overhaul of the Svelte experience, leading to better collaboration with the
Svelte core team and significant enhancements in functionality. 
The conversation covers new features like Svelte
CSF for writing stories in native Svelte syntax, improved testing capabilities, support for async components, and
upcoming features in Storybook 10. The team also discusses the philosophy behind component-driven
development, the challenges of integrating with remote functions, and Storybook's future direction including AI
support and better theming capabilities.

Links

Storybook
Storybook Svelte Guide

addon-svelte-csf

Unpopular Opinions

Antony: Svelte is an independent project! Don’t throw it in the bin
Jeppe: I like GANTT charts

Picks

Antony: Castles!
Brittney: Spain!
Jeppe: Tuple</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>WASM 3.0 with Andreas Rossberg</title>
      <link>http://podrocket.logrocket.com/wasm3-andreas-rossberg</link>
      <description>Andreas Rossberg unpacks WASM 3.0, covering new capabilities like garbage collection, exception handling, tail calls, and support for 64-bit addressing with multiple memories. The discussion explores deterministic profiles following relaxed sim, WebAssembly’s capability-based security model, and advances in sandboxing and module design. Andreas connects these features to practical use cases in JavaScript engines and applications like Google Sheets, then looks ahead to experimental work on threading, stack switching, and async programming models shaping the next phase of the WebAssembly ecosystem.
Links
Website: https://people.mpi-sws.org/~rossberg
GitHub: https://github.com/rossberg
Resources
WASM 3.0 Completed: https://webassembly.org/news/2025-09-17-wasm-3.0
Chapters
00:00 Intro – Andreas Rossberg and the WebAssembly 3.0 Update
01:05 The State of WebAssembly Today
02:15 Why WebAssembly Exists Beyond the Web
03:20 From WebAssembly 2.0 to 3.0 – What’s Actually New
04:30 Garbage Collection: A Game-Changer for Managed Languages
06:00 The Vision of WebAssembly as a Universal Compilation Target
07:40 How GC Support Unlocks Java, Kotlin, and Dart on WASM
09:10 Expanding to 64-bit Memory – Performance and Limits
10:40 WebAssembly for Databases, AI, and LLMs
12:00 Sandboxing and Security by Design
13:10 How Capabilities and Static Analysis Keep WASM Safe
14:30 Multi-Memory Support and Real-World Use Cases
16:00 Developer Ergonomics vs. Specification Purity
17:20 Tail Calls and Functional Programming Benefits
18:40 Function Tables and Secure Indirection
20:00 Exception Handling Finally Arrives
21:10 Determinism, Efficiency, and Why It Matters for Blockchain
22:30 SIMD and Hardware Divergence Across Platforms
24:00 Balancing Portability with Performance
25:20 The Design Philosophy Behind WebAssembly
26:30 Why WASM Rejects Language-Specific Features
27:40 Proposal Process: Who Decides What Gets In
29:00 Browser Vendors and Implementation Challenges
30:10 Early Deployments: GC, Tooling, and Adoption Stories
31:30 Threads, Stack Switching, and the Future of Concurrency
33:00 Async/Await and Coroutines on WebAssembly
34:30 What’s Coming Next for WASM Developers
35:40 How to Get Involved – Working Groups and Proposals
37:00 Closing Thoughts and Thanks
We want to hear from you!
How did you find us? Did you see us on Twitter? In a newsletter? Or maybe we were recommended by a friend?
Fill out our listener survey (https://t.co/oKVAEXipxu)!  https://t.co/oKVAEXipxu
Let us know by sending an email to our producer, Elizabeth, at elizabet.becz@logrocket.com (mailto:elizabeth.becz@logrocket.com), or tweet at us at PodRocketPod (https://twitter.com/PodRocketpod).
Follow us. Get free stickers.
Follow us on Apple Podcasts, fill out this form (https://podrocket.logrocket.com/get-podrocket-stickers), and we’ll send you free PodRocket stickers!
What does LogRocket do?
LogRocket provides AI-first session replay and analytics that surfaces the UX and technical issues impacting user experiences. Start understanding where your users are struggling by trying it for free at LogRocket.com. Try LogRocket for free today. (https://logrocket.com/signup/?pdr)</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>http://podrocket.logrocket.com/wasm3-andreas-rossberg</guid>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/aphid.fireside.fm/d/1437767933/3911462c-bca2-48c2-9103-610ba304c673/87a9e125-14f7-4153-b712-adc2f99eb286.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>PodRocket</itunes:author>
      <itunes:summary>Andreas Rossberg unpacks WASM 3.0, covering new capabilities like garbage collection, exception handling, tail calls, and support for 64-bit addressing with multiple memories. The discussion explores deterministic profiles following relaxed sim, WebAssembly’s capability-based security model, and advances in sandboxing and module design. Andreas connects these features to practical use cases in JavaScript engines and applications like Google Sheets, then looks ahead to experimental work on threading, stack switching, and async programming models shaping the next phase of the WebAssembly ecosystem.
Links
Website: https://people.mpi-sws.org/~rossberg
GitHub: https://github.com/rossberg
Resources
WASM 3.0 Completed: https://webassembly.org/news/2025-09-17-wasm-3.0
Chapters
00:00 Intro – Andreas Rossberg and the WebAssembly 3.0 Update
01:05 The State of WebAssembly Today
02:15 Why WebAssembly Exists Beyond the Web
03:20 From WebAssembly 2.0 to 3.0 – What’s Actually New
04:30 Garbage Collection: A Game-Changer for Managed Languages
06:00 The Vision of WebAssembly as a Universal Compilation Target
07:40 How GC Support Unlocks Java, Kotlin, and Dart on WASM
09:10 Expanding to 64-bit Memory – Performance and Limits
10:40 WebAssembly for Databases, AI, and LLMs
12:00 Sandboxing and Security by Design
13:10 How Capabilities and Static Analysis Keep WASM Safe
14:30 Multi-Memory Support and Real-World Use Cases
16:00 Developer Ergonomics vs. Specification Purity
17:20 Tail Calls and Functional Programming Benefits
18:40 Function Tables and Secure Indirection
20:00 Exception Handling Finally Arrives
21:10 Determinism, Efficiency, and Why It Matters for Blockchain
22:30 SIMD and Hardware Divergence Across Platforms
24:00 Balancing Portability with Performance
25:20 The Design Philosophy Behind WebAssembly
26:30 Why WASM Rejects Language-Specific Features
27:40 Proposal Process: Who Decides What Gets In
29:00 Browser Vendors and Implementation Challenges
30:10 Early Deployments: GC, Tooling, and Adoption Stories
31:30 Threads, Stack Switching, and the Future of Concurrency
33:00 Async/Await and Coroutines on WebAssembly
34:30 What’s Coming Next for WASM Developers
35:40 How to Get Involved – Working Groups and Proposals
37:00 Closing Thoughts and Thanks
We want to hear from you!
How did you find us? Did you see us on Twitter? In a newsletter? Or maybe we were recommended by a friend?
Fill out our listener survey (https://t.co/oKVAEXipxu)!  https://t.co/oKVAEXipxu
Let us know by sending an email to our producer, Elizabeth, at elizabet.becz@logrocket.com (mailto:elizabeth.becz@logrocket.com), or tweet at us at PodRocketPod (https://twitter.com/PodRocketpod).
Follow us. Get free stickers.
Follow us on Apple Podcasts, fill out this form (https://podrocket.logrocket.com/get-podrocket-stickers), and we’ll send you free PodRocket stickers!
What does LogRocket do?
LogRocket provides AI-first session replay and analytics that surfaces the UX and technical issues impacting user experiences. Start understanding where your users are struggling by trying it for free at LogRocket.com. Try LogRocket for free today. (https://logrocket.com/signup/?pdr)</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>93: State queries in 2025</title>
      <link>http://thecsspodcast.libsyn.com/93-state-queries-in-2025</link>
      <description>Una and Bramus dive into the latest advancements in CSS with state-based container queries. Learn how to create responsive and dynamic user experiences by querying the scroll state of UI elements, including 'stuck,' 'snapped,' and 'scrollable' states. Discover practical examples and techniques to replace complex JavaScript with declarative CSS, making your web development more efficient and powerful.
 Resources:
 Scroll state queries → https://goo.gle/4mQDQ0M
 Scroll-state-container →  https://goo.gle/487y4nI
 Anchor queries → https://goo.gle/3IBDVaw
 Episode 59 → https://goo.gle/3KB7M3z 
 Una Kravets (co-host)
 Bluesky | Twitter | YouTube | Website
Making the web more colorful @googlechrome 
 Bramus Van Damme (co-host)
 Bluesky | Mastodon | YouTube | Website
@GoogleChrome CSS DevRel; @CSSWG; Scuba Diver 🤿</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>http://thecsspodcast.libsyn.com/93-state-queries-in-2025</guid>
      <enclosure url="https://traffic.libsyn.com/secure/thecsspodcast/TCP093_final.mp3?dest-id=1891556" type="audio/mpeg" length="0"/>
      <itunes:author>The CSS Podcast</itunes:author>
      <itunes:summary>Una and Bramus dive into the latest advancements in CSS with state-based container queries. Learn how to create responsive and dynamic user experiences by querying the scroll state of UI elements, including 'stuck,' 'snapped,' and 'scrollable' states. Discover practical examples and techniques to replace complex JavaScript with declarative CSS, making your web development more efficient and powerful.
 Resources:
 Scroll state queries → https://goo.gle/4mQDQ0M
 Scroll-state-container →  https://goo.gle/487y4nI
 Anchor queries → https://goo.gle/3IBDVaw
 Episode 59 → https://goo.gle/3KB7M3z 
 Una Kravets (co-host)
 Bluesky | Twitter | YouTube | Website
Making the web more colorful @googlechrome 
 Bramus Van Damme (co-host)
 Bluesky | Mastodon | YouTube | Website
@GoogleChrome CSS DevRel; @CSSWG; Scuba Diver 🤿</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>92: CSS if() and custom functions</title>
      <link>http://thecsspodcast.libsyn.com/92-css-if-and-custom-functions</link>
      <description>Welcome back to the new season of the CSS Podcast, where Una and Bramus are your guides, your cohosts, and your CSS best friends.
  In this episode we dig into two very powerful new CSS features: inline conditionals  with the if() function, and custom functions.
 Resources:
 CSS if() function specification → https://goo.gle/3IBChWo
 Article on if() by Una → https://goo.gle/4nUxIp2
 Article on if() by Lea Verou → https://goo.gle/4nt2UvS
 CSS mixins specification →  https://goo.gle/48H8SEH
 Article on @function by Una → https://goo.gle/48H99rd
 Article on @function and if() by Bramus → https://goo.gle/46qPbzy
 The CSS Space Toggle by Chris Coyier → https://goo.gle/4874qio 
 Una Kravets (co-host)
 Twitter | Instagram | YouTube
 Making the web more colorful ✨🎨  Web DevRel @googlechrome Unicorn face host of @toolsday &amp;  Designing in the Browser 🎬 
 Bramus Van Damme (co-host)
 Bluesky | Mastodon | YouTube | Website
@GoogleChrome CSS DevRel; @CSSWG; Scuba Diver 🤿</description>
      <pubDate>Mon, 13 Oct 2025 00:00:00 GMT</pubDate>
      <guid>http://thecsspodcast.libsyn.com/92-css-if-and-custom-functions</guid>
      <enclosure url="https://traffic.libsyn.com/secure/thecsspodcast/TCP092_final.mp3?dest-id=1891556" type="audio/mpeg" length="0"/>
      <itunes:author>The CSS Podcast</itunes:author>
      <itunes:summary>Welcome back to the new season of the CSS Podcast, where Una and Bramus are your guides, your cohosts, and your CSS best friends.
  In this episode we dig into two very powerful new CSS features: inline conditionals  with the if() function, and custom functions.
 Resources:
 CSS if() function specification → https://goo.gle/3IBChWo
 Article on if() by Una → https://goo.gle/4nUxIp2
 Article on if() by Lea Verou → https://goo.gle/4nt2UvS
 CSS mixins specification →  https://goo.gle/48H8SEH
 Article on @function by Una → https://goo.gle/48H99rd
 Article on @function and if() by Bramus → https://goo.gle/46qPbzy
 The CSS Space Toggle by Chris Coyier → https://goo.gle/4874qio 
 Una Kravets (co-host)
 Twitter | Instagram | YouTube
 Making the web more colorful ✨🎨  Web DevRel @googlechrome Unicorn face host of @toolsday &amp;  Designing in the Browser 🎬 
 Bramus Van Damme (co-host)
 Bluesky | Mastodon | YouTube | Website
@GoogleChrome CSS DevRel; @CSSWG; Scuba Diver 🤿</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
  </channel>
</rss>