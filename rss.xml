<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <atom:link href="https://&lt;your-domain-here&gt;/rss.xml" rel="self" type="application/rss+xml"/>
    <title>Weekly Podcast Updates</title>
    <link>https://&lt;your-project-link-here&gt;</link>
    <language>en-us</language>
    <description>Weekly digest of podcast episodes from week 31, starting 2025-07-28.</description>
    <lastBuildDate>Mon, 04 Aug 2025 00:16:22 GMT</lastBuildDate>
    <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
    <item>
      <title>Modern Web Dev Meets 2000s Flip Phone: What Could Go Wrong?</title>
      <link>https://art19.com/shows/whiskey-web-and-whatnot</link>
      <description>This week, Robbie and Chuck talk with Tom Barrasso about building modern web apps for $15 flip phones, and the challenges of building for ultra-low-end devices. Tom shares his journey from building a podcast app during the pandemic to working in developer relations at CloudMosa. They dive into digital minimalism, the surprisingly advanced features of today’s flip phones, and what it’s like to work remotely while traveling the globe.
In this episode:

(00:00) - Intro
(01:07) - Meet Tom Barrasso
(02:54) - Whiskey rating &amp; review: Johnny Walker Black
(12:07) - Hot Take: Tailwind or vanilla CSS
(12:26) - Hot Take: Fit rebase or merge?
(13:13) - Hot Take: VS Code sidebar left or right?
(13:33) - Hot Take: Were smartphones a mistake?
(16:04) - Is switching to a flip phone easier today?
(21:17) - Increasingly expensive fast food
(22:58) - A brief history of flip phones
(29:13) - Building for devices the modern web forgot
(34:17) - How AI fits into developing for feature phones
(39:28) - Language quirks, accents, and phonetic texting
(42:34) - Tips for digital nomads and Tom’s global travels
(50:15) - Workplace politics
(55:21) - What would Tom do if not in tech?
(59:04) - Plugs

Links

Johnnie Walker Black: https://www.johnniewalker.com/en-us/our-whisky/core-range/johnnie-walker-black-label
CloudMosa: https://www.cloudmosa.com/
Cloud Phone: https://www.cloudphone.tech/
Opera Mini: https://www.opera.com/mini
Amazon: https://www.amazon.com/
Xiamoi: https://www.mi.com/
Jack Daniel's: https://www.jackdaniels.com/
Tennessee Honey: https://www.jackdaniels.com/whiskey/tennessee-honey
University of Massachusetts Amherst: https://www.umass.edu/
Macallan: https://www.themacallan.com/
Tailwind: https://tailwindcss.com/
Git: https://github.com/GIT
GitHub: https://github.com/
C++: https://www.w3schools.com/cpp/
VS Code: https://code.visualstudio.com
Reddit: https://www.reddit.com/
Nokia: https://www.nokia.com/
AirPods: https://www.apple.com/airpods/
Uber: https://www.uber.com/
Chipotle: https://www.chipotle.com/
Taco Bell: https://www.tacobell.com/
McDonald's: https://www.mcdonalds.com/
Motorola Razr: https://www.motorola.com/us/en/family/razr
Microsoft: https://www.microsoft.com/
Java: https://www.java.com/
Verizon: https://www.verizon.com/
T-Mobile: https://www.t-mobile.com/
Blackberry: https://www.blackberry.com/
Google: https://www.google.com/
Firefox: https://www.firefox.com/
KaiOS: https://www.kaiostech.com/
Geophone: https://en.wikipedia.org/wiki/Geophone
Vercel: https://vercel.com/
Joe Rogan: https://en.wikipedia.org/wiki/Joe_Rogan
Boostrap: https://getbootstrap.com/
Smashing Magazine: https://www.smashingmagazine.com/
Apple Watch: https://www.apple.com/watch/
JavaScript: https://developer.mozilla.org/en-US/docs/Web/JavaScript
Kindle: https://amazon.com/kindle
ES3: https://www.w3schools.com/js/js_versions.asp
Ember: https://emberjs.com/
KaiOS.dev: https://kaios.dev/
TypeScript: https://www.typescriptlang.org/
Claude: https://claude.ai/
Docker: https://www.docker.com/
Angular: https://angular.dev/
React: https://react.dev/
Chuck E. Cheese: https://en.wikipedia.org/wiki/Chuck_E._Cheese
ChatGPT: https://chatgpt.com/
Gemini: https://gemini.google.com/
Whisper: https://openai.com/index/whisper/
Google Translate: https://translate.google.com/
The Muppets: https://en.wikipedia.org/wiki/The_Muppets
Facebook: https://www.facebook.com/
PillPack: https://www.pillpack.com/
IKEA: https://www.ikea.com/
PHP: https://www.php.net/
Samsung: https://www.samsung.com/
Bitcoin: https://bitcoin.org/
The Inevitable by Kevin Kelly: https://www.amazon.com/Inevitable-Understanding-Technological-Forces-Future/dp/0143110373
Sam Altman: https://x.com/sama
Wired: https://www.wired.com/

Connect with Tom

Website: https://barrasso.me/
GitHub: https://github.com/Tombarr

Connect with Chuck and Robbie

Robbie Wagner: https://x.com/RobbieTheWagner
Chuck Carpenter: https://x.com/CharlesWthe3rd

Subscribe and stay in touch

Website: https://whiskey.fm
Apple Podcasts: https://podcasts.apple.com/us/podcast/whiskey-web-and-whatnot/id1552776603
Spotify: https://open.spotify.com/show/19jiuHAqzeKnkleQUpZxDf
Overcast: https://overcast.fm/itunes1552776603
YouTube: https://www.youtube.com/@WhiskeyWebAndWhatnot

Whiskey Web and Whatnot Merch
Enjoying the podcast and want us to make more? Help support us by picking up some of our fresh merch at https://whiskey.fund.
See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://art19.com/shows/whiskey-web-and-whatnot</guid>
      <enclosure url="https://m.pfxes.com/vj4uqd6U/rss.art19.com/episodes/78f97b67-0dc8-4e61-a768-8a4ae5765557.mp3?rss_browser=BAhJIg9yc3MtcGFyc2VyBjoGRVQ%3D--42d668516e215326a0c0e36404173d504b339a70" type="audio/mpeg" length="0"/>
      <itunes:author>Whiskey Web and Whatnot: Web Development, Neat</itunes:author>
      <itunes:summary>This week, Robbie and Chuck talk with Tom Barrasso about building modern web apps for $15 flip phones, and the challenges of building for ultra-low-end devices. Tom shares his journey from building a podcast app during the pandemic to working in developer relations at CloudMosa. They dive into digital minimalism, the surprisingly advanced features of today’s flip phones, and what it’s like to work remotely while traveling the globe.
In this episode:

(00:00) - Intro
(01:07) - Meet Tom Barrasso
(02:54) - Whiskey rating &amp; review: Johnny Walker Black
(12:07) - Hot Take: Tailwind or vanilla CSS
(12:26) - Hot Take: Fit rebase or merge?
(13:13) - Hot Take: VS Code sidebar left or right?
(13:33) - Hot Take: Were smartphones a mistake?
(16:04) - Is switching to a flip phone easier today?
(21:17) - Increasingly expensive fast food
(22:58) - A brief history of flip phones
(29:13) - Building for devices the modern web forgot
(34:17) - How AI fits into developing for feature phones
(39:28) - Language quirks, accents, and phonetic texting
(42:34) - Tips for digital nomads and Tom’s global travels
(50:15) - Workplace politics
(55:21) - What would Tom do if not in tech?
(59:04) - Plugs

Links

Johnnie Walker Black: https://www.johnniewalker.com/en-us/our-whisky/core-range/johnnie-walker-black-label
CloudMosa: https://www.cloudmosa.com/
Cloud Phone: https://www.cloudphone.tech/
Opera Mini: https://www.opera.com/mini
Amazon: https://www.amazon.com/
Xiamoi: https://www.mi.com/
Jack Daniel's: https://www.jackdaniels.com/
Tennessee Honey: https://www.jackdaniels.com/whiskey/tennessee-honey
University of Massachusetts Amherst: https://www.umass.edu/
Macallan: https://www.themacallan.com/
Tailwind: https://tailwindcss.com/
Git: https://github.com/GIT
GitHub: https://github.com/
C++: https://www.w3schools.com/cpp/
VS Code: https://code.visualstudio.com
Reddit: https://www.reddit.com/
Nokia: https://www.nokia.com/
AirPods: https://www.apple.com/airpods/
Uber: https://www.uber.com/
Chipotle: https://www.chipotle.com/
Taco Bell: https://www.tacobell.com/
McDonald's: https://www.mcdonalds.com/
Motorola Razr: https://www.motorola.com/us/en/family/razr
Microsoft: https://www.microsoft.com/
Java: https://www.java.com/
Verizon: https://www.verizon.com/
T-Mobile: https://www.t-mobile.com/
Blackberry: https://www.blackberry.com/
Google: https://www.google.com/
Firefox: https://www.firefox.com/
KaiOS: https://www.kaiostech.com/
Geophone: https://en.wikipedia.org/wiki/Geophone
Vercel: https://vercel.com/
Joe Rogan: https://en.wikipedia.org/wiki/Joe_Rogan
Boostrap: https://getbootstrap.com/
Smashing Magazine: https://www.smashingmagazine.com/
Apple Watch: https://www.apple.com/watch/
JavaScript: https://developer.mozilla.org/en-US/docs/Web/JavaScript
Kindle: https://amazon.com/kindle
ES3: https://www.w3schools.com/js/js_versions.asp
Ember: https://emberjs.com/
KaiOS.dev: https://kaios.dev/
TypeScript: https://www.typescriptlang.org/
Claude: https://claude.ai/
Docker: https://www.docker.com/
Angular: https://angular.dev/
React: https://react.dev/
Chuck E. Cheese: https://en.wikipedia.org/wiki/Chuck_E._Cheese
ChatGPT: https://chatgpt.com/
Gemini: https://gemini.google.com/
Whisper: https://openai.com/index/whisper/
Google Translate: https://translate.google.com/
The Muppets: https://en.wikipedia.org/wiki/The_Muppets
Facebook: https://www.facebook.com/
PillPack: https://www.pillpack.com/
IKEA: https://www.ikea.com/
PHP: https://www.php.net/
Samsung: https://www.samsung.com/
Bitcoin: https://bitcoin.org/
The Inevitable by Kevin Kelly: https://www.amazon.com/Inevitable-Understanding-Technological-Forces-Future/dp/0143110373
Sam Altman: https://x.com/sama
Wired: https://www.wired.com/

Connect with Tom

Website: https://barrasso.me/
GitHub: https://github.com/Tombarr

Connect with Chuck and Robbie

Robbie Wagner: https://x.com/RobbieTheWagner
Chuck Carpenter: https://x.com/CharlesWthe3rd

Subscribe and stay in touch

Website: https://whiskey.fm
Apple Podcasts: https://podcasts.apple.com/us/podcast/whiskey-web-and-whatnot/id1552776603
Spotify: https://open.spotify.com/show/19jiuHAqzeKnkleQUpZxDf
Overcast: https://overcast.fm/itunes1552776603
YouTube: https://www.youtube.com/@WhiskeyWebAndWhatnot

Whiskey Web and Whatnot Merch
Enjoying the podcast and want us to make more? Help support us by picking up some of our fresh merch at https://whiskey.fund.
See Privacy Policy at https://art19.com/privacy and California Privacy Notice at https://art19.com/privacy#do-not-sell-my-info.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>675: Building Hot Page with Tim Farnam</title>
      <link>https://shoptalkshow.com/675/</link>
      <description>Show Description
Tim Farnam stops by to talk with Chris and Dave about his new project, Hot Page, and why and how he started building it after working in print and web news.
(20% discount code for the Design Tokens Course: SHOPTALKSHOWISAWESOME)
Listen on Website →
Guests
Tim Farnam
Guest's Main URL • Guest's Social

Creative coder based in Mexico City, building Hot Page to help people make better websites, learn web development and quit their reliance on big tech.
Links

Hot Pricing
Design Tokens Course with Brad Frost and Ian Frost
Web Awesome
Sponsors
Design Tokens Course
World-renowned design systems experts Brad Frost (creator of Atomic Design) and Ian Frost teach you everything you need to know about creating an effective design token system to help your organization design and build at scale.</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://shoptalkshow.com/675/</guid>
      <enclosure url="https://shoptalkshow.com/podcast-download/8313/675.mp3?nocache" type="audio/mpeg" length="0"/>
      <itunes:author>ShopTalk</itunes:author>
      <itunes:summary>Show Description
Tim Farnam stops by to talk with Chris and Dave about his new project, Hot Page, and why and how he started building it after working in print and web news.
(20% discount code for the Design Tokens Course: SHOPTALKSHOWISAWESOME)
Listen on Website →
Guests
Tim Farnam
Guest's Main URL • Guest's Social

Creative coder based in Mexico City, building Hot Page to help people make better websites, learn web development and quit their reliance on big tech.
Links

Hot Pricing
Design Tokens Course with Brad Frost and Ian Frost
Web Awesome
Sponsors
Design Tokens Course
World-renowned design systems experts Brad Frost (creator of Atomic Design) and Ian Frost teach you everything you need to know about creating an effective design token system to help your organization design and build at scale.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Episode 471: Why does my junior engineer do so little and I fell asleep in a Zoom meeting</title>
      <link>https://softskills.audio/2025/07/28/episode-471-why-does-my-junior-engineer-do-so-little-and-i-fell-asleep-in-a-zoom-meeting/</link>
      <description>In this episode, Dave and Jamison answer these questions:
I’m a senior developer on a small team, and I’m feeling frustrated with a junior developer I work with. They’re smart and perfectly capable, but they stick very strictly to the confines of their assigned work. They’ll finish their tickets, but unless they’re directly asked, they don’t offer to help with other areas, pitch in on shared responsibilities, or step up when the team is trying to work cross functionally.
This engineer seems content to stay in their lane and do “just enough.” I know they’re junior, so I don’t expect miracles, but I expect some initiative. This is most frustrating because it’s a small team and it often feels like we’re working with half of an engineer when they disappear into a corner and leave the pressing issues for the senior developers to handle.
How can I encourage them (or maybe push them a bit) to see the bigger picture and contribute more to the team’s success without coming across as bossy or micromanaging? Is this really my responsibility to fix, and am I expecting too much of a junior?
I had my first day yesterday as a senior developer and dozed off at an hour meeting at the end of the day today. The meeting was about planning the next year on a zoom call with the leadership I was following in the beginning but at some point they started to talk in something I can‘t really understand(to excuse myself, I had had mant meetings throughout the day and still new to their product). I should’ve turned off my camera but I kept it on while I was definitely zoning out and got my eyes closed few times.
I am so embarrassed and don’t know what should I do and feel. I like this new workplace and people so far but should I already look for another job? Help!!!</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://softskills.audio/2025/07/28/episode-471-why-does-my-junior-engineer-do-so-little-and-i-fell-asleep-in-a-zoom-meeting/</guid>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/download.softskills.audio/sse-471.mp3?source=rss" type="audio/mpeg" length="0"/>
      <itunes:author>Soft Skills Engineering</itunes:author>
      <itunes:summary>In this episode, Dave and Jamison answer these questions:
I’m a senior developer on a small team, and I’m feeling frustrated with a junior developer I work with. They’re smart and perfectly capable, but they stick very strictly to the confines of their assigned work. They’ll finish their tickets, but unless they’re directly asked, they don’t offer to help with other areas, pitch in on shared responsibilities, or step up when the team is trying to work cross functionally.
This engineer seems content to stay in their lane and do “just enough.” I know they’re junior, so I don’t expect miracles, but I expect some initiative. This is most frustrating because it’s a small team and it often feels like we’re working with half of an engineer when they disappear into a corner and leave the pressing issues for the senior developers to handle.
How can I encourage them (or maybe push them a bit) to see the bigger picture and contribute more to the team’s success without coming across as bossy or micromanaging? Is this really my responsibility to fix, and am I expecting too much of a junior?
I had my first day yesterday as a senior developer and dozed off at an hour meeting at the end of the day today. The meeting was about planning the next year on a zoom call with the leadership I was following in the beginning but at some point they started to talk in something I can‘t really understand(to excuse myself, I had had mant meetings throughout the day and still new to their product). I should’ve turned off my camera but I kept it on while I was definitely zoning out and got my eyes closed few times.
I am so embarrassed and don’t know what should I do and feel. I like this new workplace and people so far but should I already look for another job? Help!!!</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Is Open Source Software Infrastructure?</title>
      <link>https://www.buzzsprout.com/2226499</link>
      <description>GitHub is advocating for a European Union Sovereign Tech Fund to help pay the open source software developers building and maintaining software relied upon by economies and societies just like any other necessary infrastructure like roads and bridges.
Apple gets called out by the Open Web Advocacy group saying its technical rules and restrictions are blocking other browser vendors from successfully offering their own search engines to iOS users in the EU.
Last episode we talked about Amazon’s new AI coding editor Kiro, and this week, we learned about a feature called Agent Hooks which let users write automation tools that agents can use within the IDE to do predefined actions like maintaining code quality, checking for security vulnerabilities, standardizing and enforcing team processes, and more. Think of it like pre-commit hooks but with AI behind them!
Timestamps:

0:51 - GitHub is advocating for an EU tech fund
9:21 - An update on non-WebKit browsers on iOS
15:30 - Kiro’s agent hooks
26:28 - Kilo Code
28:35 - eslint-config-prettier got hacked
33:15 - @media(hover: hover)
36:05 - What’s making us happy

Links:

Paige - GitHub is advocating for an EU Sovereign Tech Fund
Jack - Kiro’s Agent Hooks
TJ - An update on non-WebKit browsers on iOS
Kilo Code - open source AI agent VS Code extension (not to be confused with the Kiro fork)
Popular npm package eslint-config-prettier got hacked
@media(hover:hover)
Paige - Relax Meditation app
Jack - Physical books like the Annihilation series
TJ - Apple Watch series 10

Thanks as always to our sponsor, the Blue Collar Coder channel on YouTube. You can join us in our Discord channel, explore our website and reach us via email, or talk to us on X, Bluesky, or YouTube.

Front-end Fire website
Blue Collar Coder on YouTube
Blue Collar Coder on Discord
Reach out via email
Tweet at us on X @front_end_fire
Follow us on Bluesky @front-end-fire.com
Subscribe to our YouTube channel @Front-EndFirePodcast</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://www.buzzsprout.com/2226499</guid>
      <enclosure url="https://www.buzzsprout.com/2226499/episodes/17572600-is-open-source-software-infrastructure.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>Front-End Fire</itunes:author>
      <itunes:summary>GitHub is advocating for a European Union Sovereign Tech Fund to help pay the open source software developers building and maintaining software relied upon by economies and societies just like any other necessary infrastructure like roads and bridges.
Apple gets called out by the Open Web Advocacy group saying its technical rules and restrictions are blocking other browser vendors from successfully offering their own search engines to iOS users in the EU.
Last episode we talked about Amazon’s new AI coding editor Kiro, and this week, we learned about a feature called Agent Hooks which let users write automation tools that agents can use within the IDE to do predefined actions like maintaining code quality, checking for security vulnerabilities, standardizing and enforcing team processes, and more. Think of it like pre-commit hooks but with AI behind them!
Timestamps:

0:51 - GitHub is advocating for an EU tech fund
9:21 - An update on non-WebKit browsers on iOS
15:30 - Kiro’s agent hooks
26:28 - Kilo Code
28:35 - eslint-config-prettier got hacked
33:15 - @media(hover: hover)
36:05 - What’s making us happy

Links:

Paige - GitHub is advocating for an EU Sovereign Tech Fund
Jack - Kiro’s Agent Hooks
TJ - An update on non-WebKit browsers on iOS
Kilo Code - open source AI agent VS Code extension (not to be confused with the Kiro fork)
Popular npm package eslint-config-prettier got hacked
@media(hover:hover)
Paige - Relax Meditation app
Jack - Physical books like the Annihilation series
TJ - Apple Watch series 10

Thanks as always to our sponsor, the Blue Collar Coder channel on YouTube. You can join us in our Discord channel, explore our website and reach us via email, or talk to us on X, Bluesky, or YouTube.

Front-end Fire website
Blue Collar Coder on YouTube
Blue Collar Coder on Discord
Reach out via email
Tweet at us on X @front_end_fire
Follow us on Bluesky @front-end-fire.com
Subscribe to our YouTube channel @Front-EndFirePodcast</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Maxwell Brown - Effect.ts and Effectful Technologies</title>
      <link>https://podcasters.spotify.com/pod/show/devtoolsfm/episodes/Maxwell-Brown---Effect-ts-and-Effectful-Technologies-e362loj</link>
      <description>This week we're joined by Maxwell Brown, a co-founder of Effectful Technologies, the company behind Effect.ts, a library for building robust, production-grade applications with TypeScript. Effect.ts is a library that bends Typescript in many ways, like putting Errors and Dependencies into the type system. Join as as we see what they've been up to and what's next for Effect.ts.

Effect Website: https://effect.website
Effect GitHub: https://github.com/Effect-TS/effect
Maxwell's GitHub: https://github.com/IMax153
Maxwell's Twitter/X: https://x.com/imax153
Effectful Technologies: https://www.effectful.co
Effect Discord: https://discord.gg/effect-ts
Effect Days Conference: https://effect.website/events/effect-days
Advanced Effect Workshop Materials: https://github.com/IMax153/advanced-effect-workshop</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://podcasters.spotify.com/pod/show/devtoolsfm/episodes/Maxwell-Brown---Effect-ts-and-Effectful-Technologies-e362loj</guid>
      <enclosure url="https://anchor.fm/s/dd6922b4/podcast/play/106042579/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-6-26%2F404606352-44100-2-36f21f80aa99c.m4a" type="audio/mpeg" length="0"/>
      <itunes:author>devtools.fm: Developer Tools, Open Source, Software Development</itunes:author>
      <itunes:summary>This week we're joined by Maxwell Brown, a co-founder of Effectful Technologies, the company behind Effect.ts, a library for building robust, production-grade applications with TypeScript. Effect.ts is a library that bends Typescript in many ways, like putting Errors and Dependencies into the type system. Join as as we see what they've been up to and what's next for Effect.ts.

Effect Website: https://effect.website
Effect GitHub: https://github.com/Effect-TS/effect
Maxwell's GitHub: https://github.com/IMax153
Maxwell's Twitter/X: https://x.com/imax153
Effectful Technologies: https://www.effectful.co
Effect Discord: https://discord.gg/effect-ts
Effect Days Conference: https://effect.website/events/effect-days
Advanced Effect Workshop Materials: https://github.com/IMax153/advanced-effect-workshop</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>220: n8n Automatización de procesos</title>
      <link>https://podcasters.spotify.com/pod/show/fernando-her85/episodes/220-n8n-Automatizacin-de-procesos-e36b8tb</link>
      <description>En este episodio hablamos de n8n, una herramienta de automatización visual que está ganando terreno entre desarrolladores. Exploramos sus ventajas, casos de uso reales, buenas prácticas y cuándo no deberías usarla.</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://podcasters.spotify.com/pod/show/fernando-her85/episodes/220-n8n-Automatizacin-de-procesos-e36b8tb</guid>
      <enclosure url="https://anchor.fm/s/4c227378/podcast/play/106324331/https%3A%2F%2Fd3ctxlq1ktw2nl.cloudfront.net%2Fstaging%2F2025-7-1%2F753406b8-d1d4-7b98-68ad-f33c9fc7c30a.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>DevTalles</itunes:author>
      <itunes:summary>En este episodio hablamos de n8n, una herramienta de automatización visual que está ganando terreno entre desarrolladores. Exploramos sus ventajas, casos de uso reales, buenas prácticas y cuándo no deberías usarla.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Typescript Is SO SLOW...Or Is It? with Mike Hartington</title>
      <link>http://podrocket.logrocket.com/typescript-so-slow-or-is-it-mike-hartington</link>
      <description>TypeScript might feel slow, but is it really? In this episode, Mike Hartington DevRel at Nx joins us fresh off his React Miami talk to unpack what actually causes TypeScript slowdowns in large monorepos, and how techniques like project references, workspaces, and precompiled DTS files can supercharge your dev experience. We also dig into the upcoming Go-based TypeScript compiler and how it could deliver 10x+ performance gains.
Links
Website: https://mhartington.io
X: https://x.com/mhartington
Github: https://github.com/mhartington
Bluesky: https://bsky.app/profile/mhartington.io
LinkedIn: https://www.linkedin.com/in/mhartington
Resources
React Miami Talk: https://www.youtube.com/watch?v=QI3JBQl7SPM
We want to hear from you!
How did you find us? Did you see us on Twitter? In a newsletter? Or maybe we were recommended by a friend?
Fill out our listener survey (https://t.co/oKVAEXipxu)!  https://t.co/oKVAEXipxu
Let us know by sending an email to our producer, Em, at emily.kochanek@logrocket.com (mailto:emily.kochanek@logrocket.com), or tweet at us at PodRocketPod (https://twitter.com/PodRocketpod).
Follow us. Get free stickers.
Follow us on Apple Podcasts, fill out this form (https://podrocket.logrocket.com/get-podrocket-stickers), and we’ll send you free PodRocket stickers!
What does LogRocket do?
LogRocket provides AI-first session replay and analytics that surfaces the UX and technical issues impacting user experiences. Start understanding where your users are struggling by trying it for free at LogRocket.com. Try LogRocket for free today. (https://logrocket.com/signup/?pdr) Special Guest: Mike Hartington.</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>http://podrocket.logrocket.com/typescript-so-slow-or-is-it-mike-hartington</guid>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/aphid.fireside.fm/d/1437767933/3911462c-bca2-48c2-9103-610ba304c673/46338833-ae3a-4acf-b533-55df3505ed60.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>PodRocket - A web development podcast from LogRocket</itunes:author>
      <itunes:summary>TypeScript might feel slow, but is it really? In this episode, Mike Hartington DevRel at Nx joins us fresh off his React Miami talk to unpack what actually causes TypeScript slowdowns in large monorepos, and how techniques like project references, workspaces, and precompiled DTS files can supercharge your dev experience. We also dig into the upcoming Go-based TypeScript compiler and how it could deliver 10x+ performance gains.
Links
Website: https://mhartington.io
X: https://x.com/mhartington
Github: https://github.com/mhartington
Bluesky: https://bsky.app/profile/mhartington.io
LinkedIn: https://www.linkedin.com/in/mhartington
Resources
React Miami Talk: https://www.youtube.com/watch?v=QI3JBQl7SPM
We want to hear from you!
How did you find us? Did you see us on Twitter? In a newsletter? Or maybe we were recommended by a friend?
Fill out our listener survey (https://t.co/oKVAEXipxu)!  https://t.co/oKVAEXipxu
Let us know by sending an email to our producer, Em, at emily.kochanek@logrocket.com (mailto:emily.kochanek@logrocket.com), or tweet at us at PodRocketPod (https://twitter.com/PodRocketpod).
Follow us. Get free stickers.
Follow us on Apple Podcasts, fill out this form (https://podrocket.logrocket.com/get-podrocket-stickers), and we’ll send you free PodRocket stickers!
What does LogRocket do?
LogRocket provides AI-first session replay and analytics that surfaces the UX and technical issues impacting user experiences. Start understanding where your users are struggling by trying it for free at LogRocket.com. Try LogRocket for free today. (https://logrocket.com/signup/?pdr) Special Guest: Mike Hartington.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Building Jarvis: MCP and the future of AI with Kent C Dodds</title>
      <link>http://podrocket.logrocket.com/building-jarvis-mcp-future-of-ai-kent-c-dodds</link>
      <description>Kent C. Dodds is back with bold ideas and a game-changing vision for the future of AI and web development. In this episode, we dive into the Model Context Protocol (MCP), the power behind Epic AI Pro, and how developers can start building Jarvis-like assistants today. From replacing websites with MCP servers to reimagining voice interfaces and AI security, Kent lays out the roadmap for what's next, and why it matters right now. Don’t miss this fast-paced conversation about the tools and tech reshaping everything.
Links
Website: https://kentcdodds.com
X: https://x.com/kentcdodds
Github: https://github.com/kentcdodds
YouTube: https://www.youtube.com/c/kentcdodds-vids
Twitch: https://www.twitch.tv/kentcdodds
LinkedIn: https://www.linkedin.com/in/kentcdodds
Resources
Please make Jarvis (so I don't have to): https://www.epicai.pro/please-make-jarvis
AI Engineering Posts by Kent C. Dodds: https://www.epicai.pro/posts
We want to hear from you!
How did you find us? Did you see us on Twitter? In a newsletter? Or maybe we were recommended by a friend?
Let us know by sending an email to our producer, Em, at emily.kochanek@logrocket.com (mailto:emily.kochanek@logrocket.com), or tweet at us at PodRocketPod (https://twitter.com/PodRocketpod).
Follow us. Get free stickers.
Follow us on Apple Podcasts, fill out this form (https://podrocket.logrocket.com/get-podrocket-stickers), and we’ll send you free PodRocket stickers!
What does LogRocket do?
LogRocket provides AI-first session replay and analytics that surfaces the UX and technical issues impacting user experiences. Start understanding where your users are struggling by trying it for free at LogRocket.com. Try LogRocket for free today. (https://logrocket.com/signup/?pdr) Special Guest: Kent C. Dodds.</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>http://podrocket.logrocket.com/building-jarvis-mcp-future-of-ai-kent-c-dodds</guid>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/aphid.fireside.fm/d/1437767933/3911462c-bca2-48c2-9103-610ba304c673/7e97b1cf-c696-4bf0-918f-6859d794d88c.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>PodRocket - A web development podcast from LogRocket</itunes:author>
      <itunes:summary>Kent C. Dodds is back with bold ideas and a game-changing vision for the future of AI and web development. In this episode, we dive into the Model Context Protocol (MCP), the power behind Epic AI Pro, and how developers can start building Jarvis-like assistants today. From replacing websites with MCP servers to reimagining voice interfaces and AI security, Kent lays out the roadmap for what's next, and why it matters right now. Don’t miss this fast-paced conversation about the tools and tech reshaping everything.
Links
Website: https://kentcdodds.com
X: https://x.com/kentcdodds
Github: https://github.com/kentcdodds
YouTube: https://www.youtube.com/c/kentcdodds-vids
Twitch: https://www.twitch.tv/kentcdodds
LinkedIn: https://www.linkedin.com/in/kentcdodds
Resources
Please make Jarvis (so I don't have to): https://www.epicai.pro/please-make-jarvis
AI Engineering Posts by Kent C. Dodds: https://www.epicai.pro/posts
We want to hear from you!
How did you find us? Did you see us on Twitter? In a newsletter? Or maybe we were recommended by a friend?
Let us know by sending an email to our producer, Em, at emily.kochanek@logrocket.com (mailto:emily.kochanek@logrocket.com), or tweet at us at PodRocketPod (https://twitter.com/PodRocketpod).
Follow us. Get free stickers.
Follow us on Apple Podcasts, fill out this form (https://podrocket.logrocket.com/get-podrocket-stickers), and we’ll send you free PodRocket stickers!
What does LogRocket do?
LogRocket provides AI-first session replay and analytics that surfaces the UX and technical issues impacting user experiences. Start understanding where your users are struggling by trying it for free at LogRocket.com. Try LogRocket for free today. (https://logrocket.com/signup/?pdr) Special Guest: Kent C. Dodds.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>Running Doom in TypeScript’s Type System with Dimitri Mitropoulos - JSJ 684</title>
      <link>https://www.spreaker.com/episode/running-doom-in-typescript-s-type-system-with-dimitri-mitropoulos-jsj-684--67210327</link>
      <description>What if I told you someone managed to run Doom inside TypeScript’s type system? Sounds insane, right? That’s exactly what our guest Dimitri Mitropoulos did—and in this episode, we dive deep into the how, the why, and the mind-bending implications of this ambitious project. From type-level programming to the philosophical limits of Turing completeness, this is an episode that pushes the boundaries of what you thought was possible in JavaScript.
We talk about how the TypeScript type system evolved to become Turing-complete, how Dimitri pulled off this seemingly impossible feat, and why “Doom-complete” might just be the new gold standard for computational capability. Along the way, we touch on functional programming, generics, recursion, and even some Lambda Calculus. It’s part computer science theory, part coding madness, and 100% geeky goodness.
Episode Highlights
[3:05] – Dimitri explains how a simple thought experiment turned into a year-and-a-half-long obsession
[8:40] – The origins and significance of Turing completeness in type systems
[14:15] – Why running Doom in TypeScript is more about proving limits than just showing off
[19:55] – What it means to run programs inside the type system vs. TypeScript code itself
[27:10] – ASCII art as output, functional recursion for game state, and hover-over frames in your editor
[35:30] – How ignorance, determination, and obsession fueled the completion of the project
[45:20] – Personal insights: balancing family, burnout, and passion while chasing an impossible dream
Links &amp; Resources
Dimitri Mitropoulos
Michigan TypeScript YouTube Channel – Dimitri's channel featuring the project
Type Challenges by Anthony Fu – Advanced TypeScript exercises
SquiggleConf – The TypeScript-focused conference Dimitri co-founded
Josh Goldberg – TypeScript expert and co-organizer of SquiggleConf

Become a supporter of this podcast: https://www.spreaker.com/podcast/javascript-jabber--6102064/support.</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://www.spreaker.com/episode/running-doom-in-typescript-s-type-system-with-dimitri-mitropoulos-jsj-684--67210327</guid>
      <enclosure url="https://dts.podtrac.com/redirect.mp3/api.spreaker.com/download/episode/67210327/jsj_684.mp3" type="audio/mpeg" length="0"/>
      <itunes:author>JavaScript Jabber</itunes:author>
      <itunes:summary>What if I told you someone managed to run Doom inside TypeScript’s type system? Sounds insane, right? That’s exactly what our guest Dimitri Mitropoulos did—and in this episode, we dive deep into the how, the why, and the mind-bending implications of this ambitious project. From type-level programming to the philosophical limits of Turing completeness, this is an episode that pushes the boundaries of what you thought was possible in JavaScript.
We talk about how the TypeScript type system evolved to become Turing-complete, how Dimitri pulled off this seemingly impossible feat, and why “Doom-complete” might just be the new gold standard for computational capability. Along the way, we touch on functional programming, generics, recursion, and even some Lambda Calculus. It’s part computer science theory, part coding madness, and 100% geeky goodness.
Episode Highlights
[3:05] – Dimitri explains how a simple thought experiment turned into a year-and-a-half-long obsession
[8:40] – The origins and significance of Turing completeness in type systems
[14:15] – Why running Doom in TypeScript is more about proving limits than just showing off
[19:55] – What it means to run programs inside the type system vs. TypeScript code itself
[27:10] – ASCII art as output, functional recursion for game state, and hover-over frames in your editor
[35:30] – How ignorance, determination, and obsession fueled the completion of the project
[45:20] – Personal insights: balancing family, burnout, and passion while chasing an impossible dream
Links &amp; Resources
Dimitri Mitropoulos
Michigan TypeScript YouTube Channel – Dimitri's channel featuring the project
Type Challenges by Anthony Fu – Advanced TypeScript exercises
SquiggleConf – The TypeScript-focused conference Dimitri co-founded
Josh Goldberg – TypeScript expert and co-organizer of SquiggleConf

Become a supporter of this podcast: https://www.spreaker.com/podcast/javascript-jabber--6102064/support.</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>924: Sync Engines and Local Data</title>
      <link>https://syntax.fm</link>
      <description>Wes and Scott talk about local-first sync engines—why they matter, what makes apps feel fast, and which platforms stand out. From LiveStore to Convex to Instant DB, they break down the pros and cons of each and debate what the “next React” might look like in a local-first future.


Show Notes



00:00 Welcome to Syntax!


01:52 Intro to local data: what makes apps feel fast


05:08 Could the next React be a local-first sync engine?


08:23 LiveStore



18:01 Zero



21:58 Instant DB



24:18 Brought to you by Sentry.io



24:43 Convex



27:54 ElectricSQL



29:48 PowerSync and PartyKit



30:51 Choosing the right sync engine


40:34 Sick Picks + Shameless Plugs



Sick Picks


Scott: Rummikub


Wes: Headphone covers




Shameless Plugs


Syntax YouTube Channel



Hit us up on Socials!

Syntax: X Instagram Tiktok LinkedIn Threads

Wes: X Instagram Tiktok LinkedIn Threads

Scott: X Instagram Tiktok LinkedIn Threads

Randy: X Instagram YouTube Threads</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://syntax.fm</guid>
      <enclosure url="https://traffic.megaphone.fm/FSI5953232149.mp3?updated=1753731876" type="audio/mpeg" length="0"/>
      <itunes:author>Syntax - Tasty Web Development Treats</itunes:author>
      <itunes:summary>Wes and Scott talk about local-first sync engines—why they matter, what makes apps feel fast, and which platforms stand out. From LiveStore to Convex to Instant DB, they break down the pros and cons of each and debate what the “next React” might look like in a local-first future.


Show Notes



00:00 Welcome to Syntax!


01:52 Intro to local data: what makes apps feel fast


05:08 Could the next React be a local-first sync engine?


08:23 LiveStore



18:01 Zero



21:58 Instant DB



24:18 Brought to you by Sentry.io



24:43 Convex



27:54 ElectricSQL



29:48 PowerSync and PartyKit



30:51 Choosing the right sync engine


40:34 Sick Picks + Shameless Plugs



Sick Picks


Scott: Rummikub


Wes: Headphone covers




Shameless Plugs


Syntax YouTube Channel



Hit us up on Socials!

Syntax: X Instagram Tiktok LinkedIn Threads

Wes: X Instagram Tiktok LinkedIn Threads

Scott: X Instagram Tiktok LinkedIn Threads

Randy: X Instagram YouTube Threads</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
    <item>
      <title>923: Getting the Most Out of AI Coding</title>
      <link>https://syntax.fm/923</link>
      <description>Scott and Wes share their top strategies for getting high-quality results from AI coding tools like Cursor, Claude, ChatGPT, and Windsurf. From better prompting to building reusable rule sets, they cover practical tips for making AI your most productive coding partner.

Show Notes


  00:00 Welcome to Syntax!

  Wes' Tweet

  02:56 How to get the best results when using AI.

  03:15 Scaffold it out yourself.

  05:40 Be clear with your prompts.

  07:45 Use XML tags around specific items

  08:47 Utilize Rules like Cursor rules or Copilot rules.

  13:20 Ask it to create some rules based on an existing codebase.

  16:03 Break things down into clear concise actionable items.

  17:22 Where to store your rules files.

  18:37 Utilizing llm.txt files.

  19:24 Context7.

  20:28 Tag relevant files, functions, etc.

  21:38 Feed logs back into the AI.

  22:36 Logging Errors.

  22:54 Brought to you by Sentry.io.

  24:14 Long running chats get worse.

  Wes' Tweet




Hit us up on Socials!

Syntax: X Instagram Tiktok LinkedIn Threads

Wes: X Instagram Tiktok LinkedIn Threads

Scott: X Instagram Tiktok LinkedIn Threads

Randy: X Instagram YouTube Threads</description>
      <pubDate>Mon, 28 Jul 2025 00:00:00 GMT</pubDate>
      <guid>https://syntax.fm/923</guid>
      <enclosure url="https://traffic.megaphone.fm/FSI7915259350.mp3?updated=1753196329" type="audio/mpeg" length="0"/>
      <itunes:author>Syntax - Tasty Web Development Treats</itunes:author>
      <itunes:summary>Scott and Wes share their top strategies for getting high-quality results from AI coding tools like Cursor, Claude, ChatGPT, and Windsurf. From better prompting to building reusable rule sets, they cover practical tips for making AI your most productive coding partner.

Show Notes


  00:00 Welcome to Syntax!

  Wes' Tweet

  02:56 How to get the best results when using AI.

  03:15 Scaffold it out yourself.

  05:40 Be clear with your prompts.

  07:45 Use XML tags around specific items

  08:47 Utilize Rules like Cursor rules or Copilot rules.

  13:20 Ask it to create some rules based on an existing codebase.

  16:03 Break things down into clear concise actionable items.

  17:22 Where to store your rules files.

  18:37 Utilizing llm.txt files.

  19:24 Context7.

  20:28 Tag relevant files, functions, etc.

  21:38 Feed logs back into the AI.

  22:36 Logging Errors.

  22:54 Brought to you by Sentry.io.

  24:14 Long running chats get worse.

  Wes' Tweet




Hit us up on Socials!

Syntax: X Instagram Tiktok LinkedIn Threads

Wes: X Instagram Tiktok LinkedIn Threads

Scott: X Instagram Tiktok LinkedIn Threads

Randy: X Instagram YouTube Threads</itunes:summary>
      <itunes:explicit>no</itunes:explicit>
    </item>
  </channel>
</rss>